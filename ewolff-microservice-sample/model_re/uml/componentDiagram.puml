@startuml
skinparam fixCircleLabelOverlapping true
component "CatalogController\n\n\n\n\n\n" {
[com_ewolff_microservice_catalog_CatalogApp]
[com_ewolff_microservice_catalog_web_CatalogController]
[com_ewolff_microservice_catalog_ItemRepository]
portin " " as CatalogController.requires._catalog
[com_ewolff_microservice_catalog_CatalogApp]..>[com_ewolff_microservice_catalog_ItemRepository] : requires
[com_ewolff_microservice_catalog_web_CatalogController]..>[com_ewolff_microservice_catalog_ItemRepository] : requires
"CatalogController.requires._catalog"--[com_ewolff_microservice_catalog_web_CatalogController]
}
interface "/catalog" as interface._catalog
interface._catalog--"CatalogController.requires._catalog"
component "CatalogStub\n\n\n\n\n\n" {
[com_ewolff_microservice_order_catalogstub_CatalogStub]
portin " " as CatalogStub.requires._order_catalog
"CatalogStub.requires._order_catalog"--[com_ewolff_microservice_order_catalogstub_CatalogStub]
}
interface "/order/catalog" as interface._order_catalog
interface._order_catalog--"CatalogStub.requires._order_catalog"
component "CustomerController\n\n\n\n\n\n" {
[com_ewolff_microservice_customer_CustomerApp]
[com_ewolff_microservice_customer_web_CustomerController]
[com_ewolff_microservice_customer_CustomerRepository]
portin " " as CustomerController.requires._customer
[com_ewolff_microservice_customer_CustomerApp]..>[com_ewolff_microservice_customer_CustomerRepository] : requires
[com_ewolff_microservice_customer_web_CustomerController]..>[com_ewolff_microservice_customer_CustomerRepository] : requires
"CustomerController.requires._customer"--[com_ewolff_microservice_customer_web_CustomerController]
}
interface "/customer" as interface._customer
interface._customer--"CustomerController.requires._customer"
component "CustomerStub\n\n\n\n\n\n" {
[com_ewolff_microservice_order_customerstub_CustomerStub]
portin " " as CustomerStub.requires._order_customer
"CustomerStub.requires._order_customer"--[com_ewolff_microservice_order_customerstub_CustomerStub]
}
interface "/order/customer" as interface._order_customer
interface._order_customer--"CustomerStub.requires._order_customer"
component "OrderService\n\n\n\n\n\n" {
[com_ewolff_microservice_order_clients_CustomerClient]
[com_ewolff_microservice_order_clients_CatalogClient]
[com_ewolff_microservice_order_logic_OrderController]
[com_ewolff_microservice_order_logic_OrderRepository]
[com_ewolff_microservice_order_logic_OrderService]
portin " " as OrderService.requires._order
[com_ewolff_microservice_order_logic_OrderController]..>[com_ewolff_microservice_order_logic_OrderRepository] : requires
[com_ewolff_microservice_order_logic_OrderService]..>[com_ewolff_microservice_order_logic_OrderRepository] : requires
[com_ewolff_microservice_order_logic_OrderController]..>[com_ewolff_microservice_order_clients_CatalogClient] : requires
[com_ewolff_microservice_order_logic_OrderService]..>[com_ewolff_microservice_order_clients_CatalogClient] : requires
[com_ewolff_microservice_order_logic_OrderController]..>[com_ewolff_microservice_order_clients_CustomerClient] : requires
[com_ewolff_microservice_order_logic_OrderService]..>[com_ewolff_microservice_order_clients_CustomerClient] : requires
"OrderService.requires._order"--[com_ewolff_microservice_order_logic_OrderController]
}
interface "/order" as interface._order
interface._order--"OrderService.requires._order"

@enduml
