name: Reverse-Engineer Case Studies

on:
  workflow_dispatch:

  # Every day at 2:00.
  schedule:
  - cron: '0 2 * * *'

jobs:
  find_dirs:
    runs-on: ubuntu-latest
    
    outputs:
      array: ${{ steps.find_directories.outputs.array }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find directories
        id: find_directories
        run: |
          array=$( \
            printf '[%s]' "$(find . -maxdepth 1 -type d -exec test -e "{}/.ruleengine.yml" ';' -printf '"%P",' | sed 's/\.\///g; s/,$//')" \
          )
          echo "array=$array" >> $GITHUB_OUTPUT

  generate_pcm:
    runs-on: ubuntu-latest
    needs: find_dirs
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.find_dirs.outputs.array) }}

    steps:
      - name: Checkout benchmark repository
        uses: actions/checkout@v3
        with:
          path: benchmark
        
      - name: Install yq
        run: |
          wget https://github.com/mikefarah/yq/releases/download/v4.2.0/yq_linux_amd64.tar.gz -O - \
          | tar xz && sudo mv yq_linux_amd64 /usr/bin/yq
        
      - name: Parse .ruleengine.yml
        run: |
          CONFIG_FILE="benchmark/${{ matrix.directory }}/.ruleengine.yml"
          echo "repository=$(yq eval '.repository' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "current_version=$(yq eval '.current_version' $CONFIG_FILE)" >> $GITHUB_ENV
          echo "rules=$(yq eval '.rules[]' $CONFIG_FILE | paste -sd ",")" >> $GITHUB_ENV

      - name: Get latest RuleEngine version
        run: |
          LATEST_VERSION=$(\
            curl -sL ${{ github.api_url }}/repos/PalladioSimulator/Palladio-ReverseEngineering-SoMoX-RuleEngine/releases/latest \
            | jq  -r ".tag_name"
          )
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Checkout repository
        if: ${{ env.latest_version != env.current_verion }}
        uses: actions/checkout@v3
        with:
          path: repo
          repository: ${{ env.repository }}

      - name: Run RuleEngine
        if: ${{ env.latest_version != env.current_verion }}
        uses: FloBoJa/Palladio-ReverseEngineering-SoMoX-RuleEngine@master
        with:
          source_path: repo
          rules: ${{ env.rules }}

      - name: Update version
        if: ${{ env.latest_version != env.current_version }}
        run: yq eval -i '.current_version = "${{ env.latest_version }}"' "benchmark/${{ matrix.directory }}/.ruleengine.yml"
