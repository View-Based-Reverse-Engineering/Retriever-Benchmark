name: Reverse-Engineer Case Studies

on:
  workflow_dispatch:

  # Every day at 2:00.
  schedule:
  - cron: '0 2 * * *'

jobs:
  find_dirs:
    runs-on: ubuntu-latest
    
    outputs:
      array: ${{ steps.find_directories.outputs.array }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find directories
        id: find_directories
        run: |
          array=$( \
            printf '%s\n' $(ls -d */ \
            | sed 's/\/$//' \
            | sed 's/.*/"&"/') \
            | sed ':a;N;$!ba;s/\n/, /g' \
            | printf '[%s]\n' "$(cat)" \
          )
          echo "p::set-output name=array::$array"

  generate_pcm:
    runs-on: ubuntu-latest
    needs: find_dirs
    strategy:
      matrix:
        directory: ${{ fromJson(needs.find_dirs.outputs.array) }}

    steps:
      - name: Get latest RuleEngine version
        run: |
          LATEST_VERSION=$(\
            curl -sL https://api.github.com/repos/PalladioSimulator/Palladio-ReverseEngineering-SoMoX-RuleEngine/releases/latest \
            | jq  -r ".tag_name"
          )
          echo "latest_version=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Run RuleEngine on every directory
        if: ${{ env.latest_version != vars.CURRENT_RULE_ENGINE_VERSION }}
        uses: PalladioSimulator/Palladio-ReverseEngineering-SoMoX-RuleEngine@master
        with:
          source_path: ${{ matrix.directory }}

      - name: Update version
        if: ${{ env.latest_version != vars.CURRENT_RULE_ENGINE_VERSION }}
        run: |
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          https://api.github.com/repos/FloBoJa/ArDoCoBenchmark/actions/variables/CURRENT_RULE_ENGINE_VERSION \
          -d '{"name":"CURRENT_RULE_ENGINE_VERSION","value":"${{ env.latest_version }}"}'
