@startuml

interface "/movie" as MovieInterface1

component [movie-service] as movieService{
	portin " " as movieIn1
	component [MovieController] as MovieController
	component [MovieRepo] as MovieRepo1

	MovieInterface1 -- movieIn1

	MovieController ..> MovieRepo1 : requires
	movieIn1 -- MovieController
}

interface "/recommendation" as recoInterface1

component [recommendation-service] as recoService {
	portin " " as RecoIn
	component [RecommendationController] as RecoController
	component [UserRepo] as UserRepo2
	component [MovieRepo] as MovieRepo2

	recoInterface1 -- RecoIn
	RecoIn -- RecoController
	RecoController ..> UserRepo2 : requires
	RecoController ..> MovieRepo2 : requires
}

interface "/user" as userInterface1

component [user-service] as userService {
	portin " " as UserIn1

	component [UserController] as UserController
	component [UserRepo] as UserRepo1

	userInterface1 -- UserIn1

	UserIn1 -- UserController

	UserController ..> UserRepo1:requires
}

interface "/api" as ClientInterface

component [recommendation-client] as recoClient{
	portin " " as ClientIn
	component [MainController] as MainController
	component [RecommendationClientService] as RecommendationClientService
	portout " " as out1
	portout " " as out2
	component [RecommendationService] as RecommendationService
	portout " " as ClientReco
	component [UserService] as UserService
	portout " " as ClientUser
	component [MovieService] as MovieService
	portout " " as ClientMovie

	ClientInterface -- ClientIn
	ClientIn -- MainController
	MainController ..> RecommendationClientService : requires
	MainController ..> UserService : requires
	RecommendationService ..ClientReco
	UserService .. ClientUser
	MovieService .. ClientMovie
	RecommendationClientService .. out1
	RecommendationClientService .. out2
}

ClientMovie ..> MovieInterface1 : requires

ClientUser ..> userInterface1 : requires
ClientReco ..> recoInterface1 : requires
out1 ..> userInterface1 : requires
out2 ..> recoInterface1 : requires

component [config-service] as config

component [eureka-service] as eureka

movieService ..> eureka : use
recoService ..> eureka : use
recoClient ..> eureka : use
userService ..> eureka : use

movieService ..> config : use
recoService ..> config : use
recoClient ..> config : use
userService ..> config : use
eureka ..> config : use

@enduml
