@startuml
skinparam fixCircleLabelOverlapping true
component "AdminBasicInfoController\n\n\n\n\n\n" {
[adminbasic_service_AdminBasicInfoService]
[adminbasic_controller_AdminBasicInfoController]
[adminbasic_service_AdminBasicInfoServiceImpl]
portin " " as AdminBasicInfoController_requires_SPRING_APPLICATION_api_v1_adminbasicservice
[adminbasic_controller_AdminBasicInfoController]..>[adminbasic_service_AdminBasicInfoServiceImpl] : requires
[adminbasic_controller_AdminBasicInfoController]..>[adminbasic_service_AdminBasicInfoService] : requires
"AdminBasicInfoController_requires_SPRING_APPLICATION_api_v1_adminbasicservice"--[adminbasic_controller_AdminBasicInfoController]
}
interface "SPRING-APPLICATION/api/v1/adminbasicservice" as interface.SPRING_APPLICATION_api_v1_adminbasicservice
interface.SPRING_APPLICATION_api_v1_adminbasicservice--"AdminBasicInfoController_requires_SPRING_APPLICATION_api_v1_adminbasicservice"
component "AdminOrderController\n\n\n\n\n\n" {
[adminorder_service_AdminOrderService]
[adminorder_service_AdminOrderServiceImpl]
[adminorder_controller_AdminOrderController]
portin " " as AdminOrderController_requires_SPRING_APPLICATION_api_v1_adminorderservice_GET_
[adminorder_controller_AdminOrderController]..>[adminorder_service_AdminOrderService] : requires
[adminorder_controller_AdminOrderController]..>[adminorder_service_AdminOrderServiceImpl] : requires
"AdminOrderController_requires_SPRING_APPLICATION_api_v1_adminorderservice_GET_"--[adminorder_controller_AdminOrderController]
}
interface "SPRING-APPLICATION/api/v1/adminorderservice[GET]" as interface.SPRING_APPLICATION_api_v1_adminorderservice_GET_
interface.SPRING_APPLICATION_api_v1_adminorderservice_GET_--"AdminOrderController_requires_SPRING_APPLICATION_api_v1_adminorderservice_GET_"
component "AdminRouteController\n\n\n\n\n\n" {
[adminroute_controller_AdminRouteController]
[adminroute_service_AdminRouteServiceImpl]
[adminroute_service_AdminRouteService]
portin " " as AdminRouteController_requires_SPRING_APPLICATION_api_v1_adminrouteservice_GET_
[adminroute_controller_AdminRouteController]..>[adminroute_service_AdminRouteServiceImpl] : requires
[adminroute_controller_AdminRouteController]..>[adminroute_service_AdminRouteService] : requires
"AdminRouteController_requires_SPRING_APPLICATION_api_v1_adminrouteservice_GET_"--[adminroute_controller_AdminRouteController]
}
interface "SPRING-APPLICATION/api/v1/adminrouteservice[GET]" as interface.SPRING_APPLICATION_api_v1_adminrouteservice_GET_
interface.SPRING_APPLICATION_api_v1_adminrouteservice_GET_--"AdminRouteController_requires_SPRING_APPLICATION_api_v1_adminrouteservice_GET_"
component "AdminTravelController\n\n\n\n\n\n" {
[admintravel_controller_AdminTravelController]
[admintravel_service_AdminTravelServiceImpl]
[admintravel_service_AdminTravelService]
portin " " as AdminTravelController_requires_SPRING_APPLICATION_api_v1_admintravelservice_GET_
[admintravel_controller_AdminTravelController]..>[admintravel_service_AdminTravelServiceImpl] : requires
[admintravel_controller_AdminTravelController]..>[admintravel_service_AdminTravelService] : requires
"AdminTravelController_requires_SPRING_APPLICATION_api_v1_admintravelservice_GET_"--[admintravel_controller_AdminTravelController]
}
interface "SPRING-APPLICATION/api/v1/admintravelservice[GET]" as interface.SPRING_APPLICATION_api_v1_admintravelservice_GET_
interface.SPRING_APPLICATION_api_v1_admintravelservice_GET_--"AdminTravelController_requires_SPRING_APPLICATION_api_v1_admintravelservice_GET_"
component "AdminUserController\n\n\n\n\n\n" {
[adminuser_service_AdminUserService]
[adminuser_controller_AdminUserController]
[adminuser_service_AdminUserServiceImpl]
portin " " as AdminUserController_requires_SPRING_APPLICATION_api_v1_adminuserservice_users
[adminuser_controller_AdminUserController]..>[adminuser_service_AdminUserServiceImpl] : requires
[adminuser_controller_AdminUserController]..>[adminuser_service_AdminUserService] : requires
"AdminUserController_requires_SPRING_APPLICATION_api_v1_adminuserservice_users"--[adminuser_controller_AdminUserController]
}
interface "SPRING-APPLICATION/api/v1/adminuserservice/users" as interface.SPRING_APPLICATION_api_v1_adminuserservice_users
interface.SPRING_APPLICATION_api_v1_adminuserservice_users--"AdminUserController_requires_SPRING_APPLICATION_api_v1_adminuserservice_users"
component "AssuranceServiceImpl\n\n\n\n\n\n" {
[assurance_controller_AssuranceController]
[assurance_service_AssuranceService]
[assurance_service_AssuranceServiceImpl]
[assurance_repository_AssuranceRepository]
portin " " as AssuranceServiceImpl_requires_SPRING_APPLICATION_api_v1_assuranceservice
[assurance_service_AssuranceServiceImpl]..>[assurance_repository_AssuranceRepository] : requires
[assurance_controller_AssuranceController]..>[assurance_service_AssuranceService] : requires
[assurance_controller_AssuranceController]..>[assurance_service_AssuranceServiceImpl] : requires
"AssuranceServiceImpl_requires_SPRING_APPLICATION_api_v1_assuranceservice"--[assurance_controller_AssuranceController]
}
interface "SPRING-APPLICATION/api/v1/assuranceservice" as interface.SPRING_APPLICATION_api_v1_assuranceservice
interface.SPRING_APPLICATION_api_v1_assuranceservice--"AssuranceServiceImpl_requires_SPRING_APPLICATION_api_v1_assuranceservice"
component "BasicController\n\n\n\n\n\n" {
[fdse_microservice_service_BasicService]
[fdse_microservice_service_BasicServiceImpl]
[fdse_microservice_controller_BasicController]
portin " " as BasicController_requires_SPRING_APPLICATION_api_v1_basicservice_GET_
[fdse_microservice_controller_BasicController]..>[fdse_microservice_service_BasicService] : requires
[fdse_microservice_controller_BasicController]..>[fdse_microservice_service_BasicServiceImpl] : requires
"BasicController_requires_SPRING_APPLICATION_api_v1_basicservice_GET_"--[fdse_microservice_controller_BasicController]
}
interface "SPRING-APPLICATION/api/v1/basicservice[GET]" as interface.SPRING_APPLICATION_api_v1_basicservice_GET_
interface.SPRING_APPLICATION_api_v1_basicservice_GET_--"BasicController_requires_SPRING_APPLICATION_api_v1_basicservice_GET_"
component "CancelController\n\n\n\n\n\n" {
[cancel_controller_CancelController]
[cancel_service_CancelService]
[cancel_service_CancelServiceImpl]
portin " " as CancelController_requires_SPRING_APPLICATION_api_v1_cancelservice_GET_
[cancel_controller_CancelController]..>[cancel_service_CancelServiceImpl] : requires
[cancel_controller_CancelController]..>[cancel_service_CancelService] : requires
"CancelController_requires_SPRING_APPLICATION_api_v1_cancelservice_GET_"--[cancel_controller_CancelController]
}
interface "SPRING-APPLICATION/api/v1/cancelservice[GET]" as interface.SPRING_APPLICATION_api_v1_cancelservice_GET_
interface.SPRING_APPLICATION_api_v1_cancelservice_GET_--"CancelController_requires_SPRING_APPLICATION_api_v1_cancelservice_GET_"
component "ConfigServiceImpl\n\n\n\n\n\n" {
[config_service_ConfigService]
[config_repository_ConfigRepository]
[config_controller_ConfigController]
[config_service_ConfigServiceImpl]
portin " " as ConfigServiceImpl_requires_SPRING_APPLICATION_api_v1_configservice_GET_
[config_service_ConfigServiceImpl]..>[config_repository_ConfigRepository] : requires
[config_controller_ConfigController]..>[config_service_ConfigServiceImpl] : requires
[config_controller_ConfigController]..>[config_service_ConfigService] : requires
"ConfigServiceImpl_requires_SPRING_APPLICATION_api_v1_configservice_GET_"--[config_controller_ConfigController]
}
interface "SPRING-APPLICATION/api/v1/configservice[GET]" as interface.SPRING_APPLICATION_api_v1_configservice_GET_
interface.SPRING_APPLICATION_api_v1_configservice_GET_--"ConfigServiceImpl_requires_SPRING_APPLICATION_api_v1_configservice_GET_"
component "ConsignController\n\n\n\n\n\n" {
[consign_repository_ConsignRepository]
[consign_controller_ConsignController]
[consign_service_ConsignService]
[consign_service_ConsignServiceImpl]
portin " " as ConsignController_requires_SPRING_APPLICATION_api_v1_consignservice_GET_
[consign_controller_ConsignController]..>[consign_service_ConsignServiceImpl] : requires
[consign_controller_ConsignController]..>[consign_service_ConsignService] : requires
[consign_service_ConsignServiceImpl]..>[consign_repository_ConsignRepository] : requires
"ConsignController_requires_SPRING_APPLICATION_api_v1_consignservice_GET_"--[consign_controller_ConsignController]
}
interface "SPRING-APPLICATION/api/v1/consignservice[GET]" as interface.SPRING_APPLICATION_api_v1_consignservice_GET_
interface.SPRING_APPLICATION_api_v1_consignservice_GET_--"ConsignController_requires_SPRING_APPLICATION_api_v1_consignservice_GET_"
component "ConsignPriceServiceImpl\n\n\n\n\n\n" {
[consignprice_repository_ConsignPriceConfigRepository]
[consignprice_service_ConsignPriceServiceImpl]
[consignprice_controller_ConsignPriceController]
[consignprice_service_ConsignPriceService]
portin " " as ConsignPriceServiceImpl_requires_SPRING_APPLICATION_api_v1_consignpriceservice_GET_
[consignprice_controller_ConsignPriceController]..>[consignprice_service_ConsignPriceService] : requires
[consignprice_controller_ConsignPriceController]..>[consignprice_service_ConsignPriceServiceImpl] : requires
[consignprice_service_ConsignPriceServiceImpl]..>[consignprice_repository_ConsignPriceConfigRepository] : requires
"ConsignPriceServiceImpl_requires_SPRING_APPLICATION_api_v1_consignpriceservice_GET_"--[consignprice_controller_ConsignPriceController]
}
interface "SPRING-APPLICATION/api/v1/consignpriceservice[GET]" as interface.SPRING_APPLICATION_api_v1_consignpriceservice_GET_
interface.SPRING_APPLICATION_api_v1_consignpriceservice_GET_--"ConsignPriceServiceImpl_requires_SPRING_APPLICATION_api_v1_consignpriceservice_GET_"
component "ContactsServiceImpl\n\n\n\n\n\n" {
[contacts_repository_ContactsRepository]
[contacts_controller_ContactsController]
[contacts_service_ContactsService]
[contacts_service_ContactsServiceImpl]
portin " " as ContactsServiceImpl_requires_SPRING_APPLICATION_api_v1_contactservice
[contacts_controller_ContactsController]..>[contacts_service_ContactsServiceImpl] : requires
[contacts_service_ContactsServiceImpl]..>[contacts_repository_ContactsRepository] : requires
[contacts_controller_ContactsController]..>[contacts_service_ContactsService] : requires
"ContactsServiceImpl_requires_SPRING_APPLICATION_api_v1_contactservice"--[contacts_controller_ContactsController]
}
interface "SPRING-APPLICATION/api/v1/contactservice" as interface.SPRING_APPLICATION_api_v1_contactservice
interface.SPRING_APPLICATION_api_v1_contactservice--"ContactsServiceImpl_requires_SPRING_APPLICATION_api_v1_contactservice"
component "ExecuteServiceImpl\n\n\n\n\n\n" {
[execute_controller_ExecuteControlller]
[execute_serivce_ExecuteService]
[execute_serivce_ExecuteServiceImpl]
portin " " as ExecuteServiceImpl_requires_SPRING_APPLICATION_api_v1_executeservice_GET_
[execute_controller_ExecuteControlller]..>[execute_serivce_ExecuteServiceImpl] : requires
[execute_controller_ExecuteControlller]..>[execute_serivce_ExecuteService] : requires
"ExecuteServiceImpl_requires_SPRING_APPLICATION_api_v1_executeservice_GET_"--[execute_controller_ExecuteControlller]
}
interface "SPRING-APPLICATION/api/v1/executeservice[GET]" as interface.SPRING_APPLICATION_api_v1_executeservice_GET_
interface.SPRING_APPLICATION_api_v1_executeservice_GET_--"ExecuteServiceImpl_requires_SPRING_APPLICATION_api_v1_executeservice_GET_"
component "FoodDeliveryServiceImpl\n\n\n\n\n\n" {
[food_delivery_controller_FoodDeliveryController]
[food_delivery_repository_FoodDeliveryOrderRepository]
[food_delivery_service_FoodDeliveryService]
[food_delivery_service_FoodDeliveryServiceImpl]
portin " " as FoodDeliveryServiceImpl_requires_SPRING_APPLICATION_api_v1_fooddeliveryservice_GET_
[food_delivery_controller_FoodDeliveryController]..>[food_delivery_service_FoodDeliveryService] : requires
[food_delivery_service_FoodDeliveryServiceImpl]..>[food_delivery_repository_FoodDeliveryOrderRepository] : requires
[food_delivery_controller_FoodDeliveryController]..>[food_delivery_service_FoodDeliveryServiceImpl] : requires
"FoodDeliveryServiceImpl_requires_SPRING_APPLICATION_api_v1_fooddeliveryservice_GET_"--[food_delivery_controller_FoodDeliveryController]
}
interface "SPRING-APPLICATION/api/v1/fooddeliveryservice[GET]" as interface.SPRING_APPLICATION_api_v1_fooddeliveryservice_GET_
interface.SPRING_APPLICATION_api_v1_fooddeliveryservice_GET_--"FoodDeliveryServiceImpl_requires_SPRING_APPLICATION_api_v1_fooddeliveryservice_GET_"
component "FoodServiceImpl\n\n\n\n\n\n" {
[foodsearch_service_FoodServiceImpl]
[foodsearch_mq_RabbitSend]
[foodsearch_controller_FoodController]
[foodsearch_service_FoodService]
[foodsearch_repository_FoodOrderRepository]
portin " " as FoodServiceImpl_requires_SPRING_APPLICATION_api_v1_foodservice
[foodsearch_controller_FoodController]..>[foodsearch_service_FoodService] : requires
[foodsearch_service_FoodServiceImpl]..>[foodsearch_mq_RabbitSend] : requires
[foodsearch_controller_FoodController]..>[foodsearch_mq_RabbitSend] : requires
[foodsearch_service_FoodServiceImpl]..>[foodsearch_repository_FoodOrderRepository] : requires
[foodsearch_controller_FoodController]..>[foodsearch_service_FoodServiceImpl] : requires
"FoodServiceImpl_requires_SPRING_APPLICATION_api_v1_foodservice"--[foodsearch_controller_FoodController]
}
interface "SPRING-APPLICATION/api/v1/foodservice" as interface.SPRING_APPLICATION_api_v1_foodservice
interface.SPRING_APPLICATION_api_v1_foodservice--"FoodServiceImpl_requires_SPRING_APPLICATION_api_v1_foodservice"
component "InsidePaymentServiceImpl\n\n\n\n\n\n" {
[inside_payment_service_InsidePaymentServiceImpl]
[inside_payment_repository_PaymentRepository]
[inside_payment_service_InsidePaymentService]
[inside_payment_repository_AddMoneyRepository]
[inside_payment_controller_InsidePaymentController]
portin " " as InsidePaymentServiceImpl_requires_SPRING_APPLICATION_api_v1_inside_pay_service_GET_
[inside_payment_service_InsidePaymentServiceImpl]..>[inside_payment_repository_PaymentRepository] : requires
[inside_payment_controller_InsidePaymentController]..>[inside_payment_service_InsidePaymentService] : requires
[inside_payment_service_InsidePaymentServiceImpl]..>[inside_payment_repository_AddMoneyRepository] : requires
[inside_payment_controller_InsidePaymentController]..>[inside_payment_service_InsidePaymentServiceImpl] : requires
"InsidePaymentServiceImpl_requires_SPRING_APPLICATION_api_v1_inside_pay_service_GET_"--[inside_payment_controller_InsidePaymentController]
}
interface "SPRING-APPLICATION/api/v1/inside_pay_service[GET]" as interface.SPRING_APPLICATION_api_v1_inside_pay_service_GET_
interface.SPRING_APPLICATION_api_v1_inside_pay_service_GET_--"InsidePaymentServiceImpl_requires_SPRING_APPLICATION_api_v1_inside_pay_service_GET_"
component "NotificationController\n\n\n\n\n\n" {
[notification_mq_RabbitSend]
[notification_service_NotificationServiceImpl]
[notification_controller_NotificationController]
[notification_service_NotificationService]
[notification_service_MailService]
portin " " as NotificationController_requires_SPRING_APPLICATION_api_v1_notifyservice_GET_
[notification_controller_NotificationController]..>[notification_service_NotificationServiceImpl] : requires
[notification_controller_NotificationController]..>[notification_service_NotificationService] : requires
[notification_service_NotificationServiceImpl]..>[notification_service_MailService] : requires
[notification_controller_NotificationController]..>[notification_mq_RabbitSend] : requires
"NotificationController_requires_SPRING_APPLICATION_api_v1_notifyservice_GET_"--[notification_controller_NotificationController]
}
interface "SPRING-APPLICATION/api/v1/notifyservice[GET]" as interface.SPRING_APPLICATION_api_v1_notifyservice_GET_
interface.SPRING_APPLICATION_api_v1_notifyservice_GET_--"NotificationController_requires_SPRING_APPLICATION_api_v1_notifyservice_GET_"
component "OrderOtherController\n\n\n\n\n\n" {
[other_service_OrderOtherService]
[other_controller_OrderOtherController]
[other_repository_OrderOtherRepository]
[other_service_OrderOtherServiceImpl]
portin " " as OrderOtherController_requires_SPRING_APPLICATION_api_v1_orderOtherService
[other_controller_OrderOtherController]..>[other_service_OrderOtherService] : requires
[other_service_OrderOtherServiceImpl]..>[other_repository_OrderOtherRepository] : requires
[other_controller_OrderOtherController]..>[other_service_OrderOtherServiceImpl] : requires
"OrderOtherController_requires_SPRING_APPLICATION_api_v1_orderOtherService"--[other_controller_OrderOtherController]
}
interface "SPRING-APPLICATION/api/v1/orderOtherService" as interface.SPRING_APPLICATION_api_v1_orderOtherService
interface.SPRING_APPLICATION_api_v1_orderOtherService--"OrderOtherController_requires_SPRING_APPLICATION_api_v1_orderOtherService"
component "OrderServiceImpl\n\n\n\n\n\n" {
[order_repository_OrderRepository]
[order_controller_OrderController]
[order_service_OrderServiceImpl]
[order_service_OrderService]
portin " " as OrderServiceImpl_requires_SPRING_APPLICATION_api_v1_orderservice
[order_service_OrderServiceImpl]..>[order_repository_OrderRepository] : requires
[order_controller_OrderController]..>[order_service_OrderServiceImpl] : requires
[order_controller_OrderController]..>[order_service_OrderService] : requires
"OrderServiceImpl_requires_SPRING_APPLICATION_api_v1_orderservice"--[order_controller_OrderController]
}
interface "SPRING-APPLICATION/api/v1/orderservice" as interface.SPRING_APPLICATION_api_v1_orderservice
interface.SPRING_APPLICATION_api_v1_orderservice--"OrderServiceImpl_requires_SPRING_APPLICATION_api_v1_orderservice"
component "PaymentController\n\n\n\n\n\n" {
[com_trainticket_service_PaymentService]
[com_trainticket_repository_AddMoneyRepository]
[com_trainticket_controller_PaymentController]
[com_trainticket_repository_PaymentRepository]
[com_trainticket_service_PaymentServiceImpl]
portin " " as PaymentController_requires_SPRING_APPLICATION_api_v1_paymentservice
[com_trainticket_controller_PaymentController]..>[com_trainticket_service_PaymentService] : requires
[com_trainticket_service_PaymentServiceImpl]..>[com_trainticket_repository_PaymentRepository] : requires
[com_trainticket_controller_PaymentController]..>[com_trainticket_service_PaymentServiceImpl] : requires
[com_trainticket_service_PaymentServiceImpl]..>[com_trainticket_repository_AddMoneyRepository] : requires
"PaymentController_requires_SPRING_APPLICATION_api_v1_paymentservice"--[com_trainticket_controller_PaymentController]
}
interface "SPRING-APPLICATION/api/v1/paymentservice" as interface.SPRING_APPLICATION_api_v1_paymentservice
interface.SPRING_APPLICATION_api_v1_paymentservice--"PaymentController_requires_SPRING_APPLICATION_api_v1_paymentservice"
component "PreserveOtherController\n\n\n\n\n\n" {
[preserveOther_service_PreserveOtherServiceImpl]
[preserveOther_service_PreserveOtherService]
[preserveOther_mq_RabbitSend]
[preserveOther_controller_PreserveOtherController]
portin " " as PreserveOtherController_requires_SPRING_APPLICATION_api_v1_preserveotherservice_GET_
[preserveOther_service_PreserveOtherServiceImpl]..>[preserveOther_mq_RabbitSend] : requires
[preserveOther_controller_PreserveOtherController]..>[preserveOther_service_PreserveOtherService] : requires
[preserveOther_controller_PreserveOtherController]..>[preserveOther_service_PreserveOtherServiceImpl] : requires
"PreserveOtherController_requires_SPRING_APPLICATION_api_v1_preserveotherservice_GET_"--[preserveOther_controller_PreserveOtherController]
}
interface "SPRING-APPLICATION/api/v1/preserveotherservice[GET]" as interface.SPRING_APPLICATION_api_v1_preserveotherservice_GET_
interface.SPRING_APPLICATION_api_v1_preserveotherservice_GET_--"PreserveOtherController_requires_SPRING_APPLICATION_api_v1_preserveotherservice_GET_"
component "PreserveServiceImpl\n\n\n\n\n\n" {
[preserve_controller_PreserveController]
[preserve_service_PreserveService]
[preserve_mq_RabbitSend]
[preserve_service_PreserveServiceImpl]
portin " " as PreserveServiceImpl_requires_SPRING_APPLICATION_api_v1_preserveservice_GET_
[preserve_service_PreserveServiceImpl]..>[preserve_mq_RabbitSend] : requires
[preserve_controller_PreserveController]..>[preserve_service_PreserveServiceImpl] : requires
[preserve_controller_PreserveController]..>[preserve_service_PreserveService] : requires
"PreserveServiceImpl_requires_SPRING_APPLICATION_api_v1_preserveservice_GET_"--[preserve_controller_PreserveController]
}
interface "SPRING-APPLICATION/api/v1/preserveservice[GET]" as interface.SPRING_APPLICATION_api_v1_preserveservice_GET_
interface.SPRING_APPLICATION_api_v1_preserveservice_GET_--"PreserveServiceImpl_requires_SPRING_APPLICATION_api_v1_preserveservice_GET_"
component "PriceServiceImpl\n\n\n\n\n\n" {
[price_repository_PriceConfigRepository]
[price_service_PriceService]
[price_controller_PriceController]
[price_service_PriceServiceImpl]
portin " " as PriceServiceImpl_requires_SPRING_APPLICATION_api_v1_priceservice_GET_
[price_service_PriceServiceImpl]..>[price_repository_PriceConfigRepository] : requires
[price_controller_PriceController]..>[price_service_PriceService] : requires
[price_controller_PriceController]..>[price_service_PriceServiceImpl] : requires
"PriceServiceImpl_requires_SPRING_APPLICATION_api_v1_priceservice_GET_"--[price_controller_PriceController]
}
interface "SPRING-APPLICATION/api/v1/priceservice[GET]" as interface.SPRING_APPLICATION_api_v1_priceservice_GET_
interface.SPRING_APPLICATION_api_v1_priceservice_GET_--"PriceServiceImpl_requires_SPRING_APPLICATION_api_v1_priceservice_GET_"
component "RebookServiceImpl\n\n\n\n\n\n" {
[rebook_service_RebookService]
[rebook_controller_RebookController]
[rebook_service_RebookServiceImpl]
portin " " as RebookServiceImpl_requires_SPRING_APPLICATION_api_v1_rebookservice_GET_
[rebook_controller_RebookController]..>[rebook_service_RebookService] : requires
[rebook_controller_RebookController]..>[rebook_service_RebookServiceImpl] : requires
"RebookServiceImpl_requires_SPRING_APPLICATION_api_v1_rebookservice_GET_"--[rebook_controller_RebookController]
}
interface "SPRING-APPLICATION/api/v1/rebookservice[GET]" as interface.SPRING_APPLICATION_api_v1_rebookservice_GET_
interface.SPRING_APPLICATION_api_v1_rebookservice_GET_--"RebookServiceImpl_requires_SPRING_APPLICATION_api_v1_rebookservice_GET_"
component "RouteController\n\n\n\n\n\n" {
[route_controller_RouteController]
[route_repository_RouteRepository]
[route_service_RouteServiceImpl]
[route_service_RouteService]
portin " " as RouteController_requires_SPRING_APPLICATION_api_v1_routeservice
[route_service_RouteServiceImpl]..>[route_repository_RouteRepository] : requires
[route_controller_RouteController]..>[route_service_RouteService] : requires
[route_controller_RouteController]..>[route_service_RouteServiceImpl] : requires
"RouteController_requires_SPRING_APPLICATION_api_v1_routeservice"--[route_controller_RouteController]
}
interface "SPRING-APPLICATION/api/v1/routeservice" as interface.SPRING_APPLICATION_api_v1_routeservice
interface.SPRING_APPLICATION_api_v1_routeservice--"RouteController_requires_SPRING_APPLICATION_api_v1_routeservice"
component "RoutePlanServiceImpl\n\n\n\n\n\n" {
[plan_service_RoutePlanServiceImpl]
[plan_controller_RoutePlanController]
[plan_service_RoutePlanService]
portin " " as RoutePlanServiceImpl_requires_SPRING_APPLICATION_api_v1_routeplanservice_GET_
[plan_controller_RoutePlanController]..>[plan_service_RoutePlanServiceImpl] : requires
[plan_controller_RoutePlanController]..>[plan_service_RoutePlanService] : requires
"RoutePlanServiceImpl_requires_SPRING_APPLICATION_api_v1_routeplanservice_GET_"--[plan_controller_RoutePlanController]
}
interface "SPRING-APPLICATION/api/v1/routeplanservice[GET]" as interface.SPRING_APPLICATION_api_v1_routeplanservice_GET_
interface.SPRING_APPLICATION_api_v1_routeplanservice_GET_--"RoutePlanServiceImpl_requires_SPRING_APPLICATION_api_v1_routeplanservice_GET_"
component "SeatController\n\n\n\n\n\n" {
[seat_controller_SeatController]
[seat_service_SeatServiceImpl]
[seat_service_SeatService]
portin " " as SeatController_requires_SPRING_APPLICATION_api_v1_seatservice_GET_
[seat_controller_SeatController]..>[seat_service_SeatService] : requires
[seat_controller_SeatController]..>[seat_service_SeatServiceImpl] : requires
"SeatController_requires_SPRING_APPLICATION_api_v1_seatservice_GET_"--[seat_controller_SeatController]
}
interface "SPRING-APPLICATION/api/v1/seatservice[GET]" as interface.SPRING_APPLICATION_api_v1_seatservice_GET_
interface.SPRING_APPLICATION_api_v1_seatservice_GET_--"SeatController_requires_SPRING_APPLICATION_api_v1_seatservice_GET_"
component "SecurityController\n\n\n\n\n\n" {
[security_service_SecurityServiceImpl]
[security_service_SecurityService]
[security_controller_SecurityController]
[security_repository_SecurityRepository]
portin " " as SecurityController_requires_SPRING_APPLICATION_api_v1_securityservice
[security_service_SecurityServiceImpl]..>[security_repository_SecurityRepository] : requires
[security_controller_SecurityController]..>[security_service_SecurityServiceImpl] : requires
[security_controller_SecurityController]..>[security_service_SecurityService] : requires
"SecurityController_requires_SPRING_APPLICATION_api_v1_securityservice"--[security_controller_SecurityController]
}
interface "SPRING-APPLICATION/api/v1/securityservice" as interface.SPRING_APPLICATION_api_v1_securityservice
interface.SPRING_APPLICATION_api_v1_securityservice--"SecurityController_requires_SPRING_APPLICATION_api_v1_securityservice"
component "StationController\n\n\n\n\n\n" {
[fdse_microservice_repository_StationRepository]
[fdse_microservice_controller_StationController]
[fdse_microservice_service_StationServiceImpl]
[fdse_microservice_service_StationService]
portin " " as StationController_requires_SPRING_APPLICATION_api_v1_stationservice_GET_
[fdse_microservice_service_StationServiceImpl]..>[fdse_microservice_repository_StationRepository] : requires
[fdse_microservice_controller_StationController]..>[fdse_microservice_service_StationService] : requires
[fdse_microservice_controller_StationController]..>[fdse_microservice_service_StationServiceImpl] : requires
"StationController_requires_SPRING_APPLICATION_api_v1_stationservice_GET_"--[fdse_microservice_controller_StationController]
}
interface "SPRING-APPLICATION/api/v1/stationservice[GET]" as interface.SPRING_APPLICATION_api_v1_stationservice_GET_
interface.SPRING_APPLICATION_api_v1_stationservice_GET_--"StationController_requires_SPRING_APPLICATION_api_v1_stationservice_GET_"
component "StationFoodServiceImpl\n\n\n\n\n\n" {
[food_service_StationFoodServiceImpl]
[food_repository_StationFoodRepository]
[food_controller_StationFoodController]
[food_service_StationFoodService]
portin " " as StationFoodServiceImpl_requires_SPRING_APPLICATION_api_v1_stationfoodservice_GET_
[food_controller_StationFoodController]..>[food_service_StationFoodService] : requires
[food_service_StationFoodServiceImpl]..>[food_repository_StationFoodRepository] : requires
[food_controller_StationFoodController]..>[food_service_StationFoodServiceImpl] : requires
"StationFoodServiceImpl_requires_SPRING_APPLICATION_api_v1_stationfoodservice_GET_"--[food_controller_StationFoodController]
}
interface "SPRING-APPLICATION/api/v1/stationfoodservice[GET]" as interface.SPRING_APPLICATION_api_v1_stationfoodservice_GET_
interface.SPRING_APPLICATION_api_v1_stationfoodservice_GET_--"StationFoodServiceImpl_requires_SPRING_APPLICATION_api_v1_stationfoodservice_GET_"
component "TokenServiceImpl\n\n\n\n\n\n" {
[auth_controller_UserController]
[auth_service_impl_TokenServiceImpl]
[auth_controller_AuthController]
[auth_service_UserService]
[auth_security_jwt_JWTProvider]
[auth_service_TokenService]
[auth_repository_UserRepository]
[auth_service_impl_UserServiceImpl]
portin " " as TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_auth_POST_
portin " " as TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_users
[auth_service_impl_TokenServiceImpl]..>[auth_security_jwt_JWTProvider] : requires
[auth_controller_UserController]..>[auth_service_UserService] : requires
[auth_controller_AuthController]..>[auth_service_UserService] : requires
[auth_controller_UserController]..>[auth_service_TokenService] : requires
[auth_controller_AuthController]..>[auth_service_impl_UserServiceImpl] : requires
[auth_service_impl_UserServiceImpl]..>[auth_repository_UserRepository] : requires
[auth_service_impl_TokenServiceImpl]..>[auth_repository_UserRepository] : requires
[auth_controller_UserController]..>[auth_service_impl_TokenServiceImpl] : requires
[auth_controller_UserController]..>[auth_service_impl_UserServiceImpl] : requires
"TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_users"--[auth_controller_UserController]
"TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_auth_POST_"--[auth_controller_AuthController]
}
interface "SPRING-APPLICATION/api/v1/auth[POST]" as interface.SPRING_APPLICATION_api_v1_auth_POST_
interface.SPRING_APPLICATION_api_v1_auth_POST_--"TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_auth_POST_"
interface "SPRING-APPLICATION/api/v1/users" as interface.SPRING_APPLICATION_api_v1_users
interface.SPRING_APPLICATION_api_v1_users--"TokenServiceImpl_requires_SPRING_APPLICATION_api_v1_users"
component "TrainController\n\n\n\n\n\n" {
[train_service_TrainService]
[train_controller_TrainController]
[train_repository_TrainTypeRepository]
[train_service_TrainServiceImpl]
portin " " as TrainController_requires_SPRING_APPLICATION_api_v1_trainservice_GET_
[train_service_TrainServiceImpl]..>[train_repository_TrainTypeRepository] : requires
[train_controller_TrainController]..>[train_service_TrainService] : requires
[train_controller_TrainController]..>[train_service_TrainServiceImpl] : requires
"TrainController_requires_SPRING_APPLICATION_api_v1_trainservice_GET_"--[train_controller_TrainController]
}
interface "SPRING-APPLICATION/api/v1/trainservice[GET]" as interface.SPRING_APPLICATION_api_v1_trainservice_GET_
interface.SPRING_APPLICATION_api_v1_trainservice_GET_--"TrainController_requires_SPRING_APPLICATION_api_v1_trainservice_GET_"
component "TrainFoodController\n\n\n\n\n\n" {
[trainFood_controller_TrainFoodController]
[trainFood_service_TrainFoodService]
[trainFood_service_TrainFoodServiceImpl]
[trainFood_repository_TrainFoodRepository]
portin " " as TrainFoodController_requires_SPRING_APPLICATION_api_v1_trainfoodservice_GET_
[trainFood_controller_TrainFoodController]..>[trainFood_service_TrainFoodService] : requires
[trainFood_service_TrainFoodServiceImpl]..>[trainFood_repository_TrainFoodRepository] : requires
[trainFood_controller_TrainFoodController]..>[trainFood_service_TrainFoodServiceImpl] : requires
"TrainFoodController_requires_SPRING_APPLICATION_api_v1_trainfoodservice_GET_"--[trainFood_controller_TrainFoodController]
}
interface "SPRING-APPLICATION/api/v1/trainfoodservice[GET]" as interface.SPRING_APPLICATION_api_v1_trainfoodservice_GET_
interface.SPRING_APPLICATION_api_v1_trainfoodservice_GET_--"TrainFoodController_requires_SPRING_APPLICATION_api_v1_trainfoodservice_GET_"
component "TravelPlanServiceImpl\n\n\n\n\n\n" {
[travelplan_service_TravelPlanServiceImpl]
[travelplan_controller_TravelPlanController]
[travelplan_service_TravelPlanService]
portin " " as TravelPlanServiceImpl_requires_SPRING_APPLICATION_api_v1_travelplanservice_GET_
[travelplan_controller_TravelPlanController]..>[travelplan_service_TravelPlanServiceImpl] : requires
[travelplan_controller_TravelPlanController]..>[travelplan_service_TravelPlanService] : requires
"TravelPlanServiceImpl_requires_SPRING_APPLICATION_api_v1_travelplanservice_GET_"--[travelplan_controller_TravelPlanController]
}
interface "SPRING-APPLICATION/api/v1/travelplanservice[GET]" as interface.SPRING_APPLICATION_api_v1_travelplanservice_GET_
interface.SPRING_APPLICATION_api_v1_travelplanservice_GET_--"TravelPlanServiceImpl_requires_SPRING_APPLICATION_api_v1_travelplanservice_GET_"
component "TravelServiceImpl\n\n\n\n\n\n" {
[travel2_service_TravelService]
[travel2_repository_TripRepository]
[travel_controller_TravelController]
[travel2_controller_Travel2Controller]
[travel_service_TravelService]
[travel_service_TravelServiceImpl]
[travel2_service_TravelServiceImpl]
[travel_repository_TripRepository]
portin " " as TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travelservice_GET_
portin " " as TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travel2service_GET_
[travel_service_TravelServiceImpl]..>[travel_repository_TripRepository] : requires
[travel2_controller_Travel2Controller]..>[travel2_service_TravelServiceImpl] : requires
[travel2_service_TravelServiceImpl]..>[travel2_repository_TripRepository] : requires
[travel2_controller_Travel2Controller]..>[travel2_service_TravelService] : requires
[travel_controller_TravelController]..>[travel_service_TravelServiceImpl] : requires
[travel_controller_TravelController]..>[travel_service_TravelService] : requires
"TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travelservice_GET_"--[travel_controller_TravelController]
"TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travel2service_GET_"--[travel2_controller_Travel2Controller]
}
interface "SPRING-APPLICATION/api/v1/travel2service[GET]" as interface.SPRING_APPLICATION_api_v1_travel2service_GET_
interface.SPRING_APPLICATION_api_v1_travel2service_GET_--"TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travel2service_GET_"
interface "SPRING-APPLICATION/api/v1/travelservice[GET]" as interface.SPRING_APPLICATION_api_v1_travelservice_GET_
interface.SPRING_APPLICATION_api_v1_travelservice_GET_--"TravelServiceImpl_requires_SPRING_APPLICATION_api_v1_travelservice_GET_"
component "VerifyCodeController\n\n\n\n\n\n" {
[verifycode_service_impl_VerifyCodeServiceImpl]
[verifycode_controller_VerifyCodeController]
[verifycode_service_VerifyCodeService]
portin " " as VerifyCodeController_requires_SPRING_APPLICATION_api_v1_verifycode
[verifycode_controller_VerifyCodeController]..>[verifycode_service_VerifyCodeService] : requires
[verifycode_controller_VerifyCodeController]..>[verifycode_service_impl_VerifyCodeServiceImpl] : requires
"VerifyCodeController_requires_SPRING_APPLICATION_api_v1_verifycode"--[verifycode_controller_VerifyCodeController]
}
interface "SPRING-APPLICATION/api/v1/verifycode" as interface.SPRING_APPLICATION_api_v1_verifycode
interface.SPRING_APPLICATION_api_v1_verifycode--"VerifyCodeController_requires_SPRING_APPLICATION_api_v1_verifycode"
component "WaitListOrderController\n\n\n\n\n\n" {
[waitorder_repository_WaitListOrderRepository]
[waitorder_controller_WaitListOrderController]
[waitorder_service_WaitListOrderService]
[waitorder_service_Impl_WaitListOrderServiceImpl]
portin " " as WaitListOrderController_requires_SPRING_APPLICATION_api_v1_waitorderservice
[waitorder_controller_WaitListOrderController]..>[waitorder_service_Impl_WaitListOrderServiceImpl] : requires
[waitorder_service_Impl_WaitListOrderServiceImpl]..>[waitorder_repository_WaitListOrderRepository] : requires
[waitorder_controller_WaitListOrderController]..>[waitorder_service_WaitListOrderService] : requires
"WaitListOrderController_requires_SPRING_APPLICATION_api_v1_waitorderservice"--[waitorder_controller_WaitListOrderController]
}
interface "SPRING-APPLICATION/api/v1/waitorderservice" as interface.SPRING_APPLICATION_api_v1_waitorderservice
interface.SPRING_APPLICATION_api_v1_waitorderservice--"WaitListOrderController_requires_SPRING_APPLICATION_api_v1_waitorderservice"
interface "adminbasic_service_DiscoveryClient" as interface.adminbasic_service_DiscoveryClient
interface.adminbasic_service_DiscoveryClient--[adminbasic_service_DiscoveryClient_Provider]
interface "adminbasic_service_RestTemplate" as interface.adminbasic_service_RestTemplate
interface.adminbasic_service_RestTemplate--[adminbasic_service_RestTemplate_Provider]
interface "adminorder_service_DiscoveryClient" as interface.adminorder_service_DiscoveryClient
interface.adminorder_service_DiscoveryClient--[adminorder_service_DiscoveryClient_Provider]
interface "adminorder_service_RestTemplate" as interface.adminorder_service_RestTemplate
interface.adminorder_service_RestTemplate--[adminorder_service_RestTemplate_Provider]
interface "adminroute_service_DiscoveryClient" as interface.adminroute_service_DiscoveryClient
interface.adminroute_service_DiscoveryClient--[adminroute_service_DiscoveryClient_Provider]
interface "adminroute_service_RestTemplate" as interface.adminroute_service_RestTemplate
interface.adminroute_service_RestTemplate--[adminroute_service_RestTemplate_Provider]
interface "admintravel_service_DiscoveryClient" as interface.admintravel_service_DiscoveryClient
interface.admintravel_service_DiscoveryClient--[admintravel_service_DiscoveryClient_Provider]
interface "admintravel_service_RestTemplate" as interface.admintravel_service_RestTemplate
interface.admintravel_service_RestTemplate--[admintravel_service_RestTemplate_Provider]
interface "adminuser_service_DiscoveryClient" as interface.adminuser_service_DiscoveryClient
interface.adminuser_service_DiscoveryClient--[adminuser_service_DiscoveryClient_Provider]
interface "adminuser_service_RestTemplate" as interface.adminuser_service_RestTemplate
interface.adminuser_service_RestTemplate--[adminuser_service_RestTemplate_Provider]
interface "auth_service_impl_AuthenticationManager" as interface.auth_service_impl_AuthenticationManager
interface.auth_service_impl_AuthenticationManager--[auth_service_impl_AuthenticationManager_Provider]
interface "auth_service_impl_DiscoveryClient" as interface.auth_service_impl_DiscoveryClient
interface.auth_service_impl_DiscoveryClient--[auth_service_impl_DiscoveryClient_Provider]
interface "auth_service_impl_PasswordEncoder" as interface.auth_service_impl_PasswordEncoder
interface.auth_service_impl_PasswordEncoder--[auth_service_impl_PasswordEncoder_Provider]
interface "auth_service_impl_RestTemplate" as interface.auth_service_impl_RestTemplate
interface.auth_service_impl_RestTemplate--[auth_service_impl_RestTemplate_Provider]
interface "cancel_service_DiscoveryClient" as interface.cancel_service_DiscoveryClient
interface.cancel_service_DiscoveryClient--[cancel_service_DiscoveryClient_Provider]
interface "cancel_service_RestTemplate" as interface.cancel_service_RestTemplate
interface.cancel_service_RestTemplate--[cancel_service_RestTemplate_Provider]
interface "consign_service_DiscoveryClient" as interface.consign_service_DiscoveryClient
interface.consign_service_DiscoveryClient--[consign_service_DiscoveryClient_Provider]
interface "consign_service_RestTemplate" as interface.consign_service_RestTemplate
interface.consign_service_RestTemplate--[consign_service_RestTemplate_Provider]
interface "execute_serivce_DiscoveryClient" as interface.execute_serivce_DiscoveryClient
interface.execute_serivce_DiscoveryClient--[execute_serivce_DiscoveryClient_Provider]
interface "execute_serivce_RestTemplate" as interface.execute_serivce_RestTemplate
interface.execute_serivce_RestTemplate--[execute_serivce_RestTemplate_Provider]
interface "fdse_microservice_service_DiscoveryClient" as interface.fdse_microservice_service_DiscoveryClient
interface.fdse_microservice_service_DiscoveryClient--[fdse_microservice_service_DiscoveryClient_Provider]
interface "fdse_microservice_service_RestTemplate" as interface.fdse_microservice_service_RestTemplate
interface.fdse_microservice_service_RestTemplate--[fdse_microservice_service_RestTemplate_Provider]
interface "food_delivery_service_DiscoveryClient" as interface.food_delivery_service_DiscoveryClient
interface.food_delivery_service_DiscoveryClient--[food_delivery_service_DiscoveryClient_Provider]
interface "food_delivery_service_RestTemplate" as interface.food_delivery_service_RestTemplate
interface.food_delivery_service_RestTemplate--[food_delivery_service_RestTemplate_Provider]
interface "foodsearch_service_DiscoveryClient" as interface.foodsearch_service_DiscoveryClient
interface.foodsearch_service_DiscoveryClient--[foodsearch_service_DiscoveryClient_Provider]
interface "foodsearch_service_RestTemplate" as interface.foodsearch_service_RestTemplate
interface.foodsearch_service_RestTemplate--[foodsearch_service_RestTemplate_Provider]
interface "inside_payment_service_RestTemplate" as interface.inside_payment_service_RestTemplate
interface.inside_payment_service_RestTemplate--[inside_payment_service_RestTemplate_Provider]
interface "notification_service_Configuration" as interface.notification_service_Configuration
interface.notification_service_Configuration--[notification_service_Configuration_Provider]
interface "notification_service_JavaMailSender" as interface.notification_service_JavaMailSender
interface.notification_service_JavaMailSender--[notification_service_JavaMailSender_Provider]
interface "order_service_DiscoveryClient" as interface.order_service_DiscoveryClient
interface.order_service_DiscoveryClient--[order_service_DiscoveryClient_Provider]
interface "order_service_RestTemplate" as interface.order_service_RestTemplate
interface.order_service_RestTemplate--[order_service_RestTemplate_Provider]
interface "other_service_DiscoveryClient" as interface.other_service_DiscoveryClient
interface.other_service_DiscoveryClient--[other_service_DiscoveryClient_Provider]
interface "other_service_RestTemplate" as interface.other_service_RestTemplate
interface.other_service_RestTemplate--[other_service_RestTemplate_Provider]
interface "plan_service_DiscoveryClient" as interface.plan_service_DiscoveryClient
interface.plan_service_DiscoveryClient--[plan_service_DiscoveryClient_Provider]
interface "plan_service_RestTemplate" as interface.plan_service_RestTemplate
interface.plan_service_RestTemplate--[plan_service_RestTemplate_Provider]
interface "preserveOther_service_DiscoveryClient" as interface.preserveOther_service_DiscoveryClient
interface.preserveOther_service_DiscoveryClient--[preserveOther_service_DiscoveryClient_Provider]
interface "preserveOther_service_RestTemplate" as interface.preserveOther_service_RestTemplate
interface.preserveOther_service_RestTemplate--[preserveOther_service_RestTemplate_Provider]
interface "preserve_service_DiscoveryClient" as interface.preserve_service_DiscoveryClient
interface.preserve_service_DiscoveryClient--[preserve_service_DiscoveryClient_Provider]
interface "preserve_service_RestTemplate" as interface.preserve_service_RestTemplate
interface.preserve_service_RestTemplate--[preserve_service_RestTemplate_Provider]
interface "rebook_service_DiscoveryClient" as interface.rebook_service_DiscoveryClient
interface.rebook_service_DiscoveryClient--[rebook_service_DiscoveryClient_Provider]
interface "rebook_service_RestTemplate" as interface.rebook_service_RestTemplate
interface.rebook_service_RestTemplate--[rebook_service_RestTemplate_Provider]
interface "seat_service_DiscoveryClient" as interface.seat_service_DiscoveryClient
interface.seat_service_DiscoveryClient--[seat_service_DiscoveryClient_Provider]
interface "seat_service_RestTemplate" as interface.seat_service_RestTemplate
interface.seat_service_RestTemplate--[seat_service_RestTemplate_Provider]
interface "security_service_DiscoveryClient" as interface.security_service_DiscoveryClient
interface.security_service_DiscoveryClient--[security_service_DiscoveryClient_Provider]
interface "security_service_RestTemplate" as interface.security_service_RestTemplate
interface.security_service_RestTemplate--[security_service_RestTemplate_Provider]
interface "travel2_service_DiscoveryClient" as interface.travel2_service_DiscoveryClient
interface.travel2_service_DiscoveryClient--[travel2_service_DiscoveryClient_Provider]
interface "travel2_service_RestTemplate" as interface.travel2_service_RestTemplate
interface.travel2_service_RestTemplate--[travel2_service_RestTemplate_Provider]
interface "travel_service_DiscoveryClient" as interface.travel_service_DiscoveryClient
interface.travel_service_DiscoveryClient--[travel_service_DiscoveryClient_Provider]
interface "travel_service_RestTemplate" as interface.travel_service_RestTemplate
interface.travel_service_RestTemplate--[travel_service_RestTemplate_Provider]
interface "travelplan_service_DiscoveryClient" as interface.travelplan_service_DiscoveryClient
interface.travelplan_service_DiscoveryClient--[travelplan_service_DiscoveryClient_Provider]
interface "travelplan_service_RestTemplate" as interface.travelplan_service_RestTemplate
interface.travelplan_service_RestTemplate--[travelplan_service_RestTemplate_Provider]
interface "SPRING-APPLICATION/api/v1/userservice/users" as interface.SPRING_APPLICATION_api_v1_userservice_users
interface.SPRING_APPLICATION_api_v1_userservice_users--[user_controller_UserController]
[user_controller_UserController]..>[user_service_UserService] : requires
interface "user_service_impl_DiscoveryClient" as interface.user_service_impl_DiscoveryClient
interface.user_service_impl_DiscoveryClient--[user_service_impl_DiscoveryClient_Provider]
interface "user_service_impl_RestTemplate" as interface.user_service_impl_RestTemplate
interface.user_service_impl_RestTemplate--[user_service_impl_RestTemplate_Provider]
[user_service_impl_UserServiceImpl]..>[user_repository_UserRepository] : requires
interface "user_service_impl_DiscoveryClient" as interface.user_service_impl_DiscoveryClient
[user_service_impl_UserServiceImpl]..>interface.user_service_impl_DiscoveryClient : requires
interface "user_service_impl_RestTemplate" as interface.user_service_impl_RestTemplate
[user_service_impl_UserServiceImpl]..>interface.user_service_impl_RestTemplate : requires
interface "waitorder_service_Impl_DiscoveryClient" as interface.waitorder_service_Impl_DiscoveryClient
interface.waitorder_service_Impl_DiscoveryClient--[waitorder_service_Impl_DiscoveryClient_Provider]
interface "waitorder_service_Impl_RestTemplate" as interface.waitorder_service_Impl_RestTemplate
interface.waitorder_service_Impl_RestTemplate--[waitorder_service_Impl_RestTemplate_Provider]

@enduml
