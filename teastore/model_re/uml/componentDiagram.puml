@startuml
skinparam fixCircleLabelOverlapping true
component "AboutUsServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_AboutUsServlet]
}
component "AbstractCRUDEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_registryclient_util_AbstractCRUDEndpoint]
portin " " as AbstractCRUDEndpoint.requires.SERVICE_HOST_abstract
"AbstractCRUDEndpoint.requires.SERVICE_HOST_abstract"--[tools_descartes_teastore_registryclient_util_AbstractCRUDEndpoint]
}
interface "SERVICE-HOST/abstract" as interface.SERVICE_HOST_abstract
interface.SERVICE_HOST_abstract--"AbstractCRUDEndpoint.requires.SERVICE_HOST_abstract"
component "AbstractUIServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_AbstractUIServlet]
}
component "AuthCartRest\n\n\n\n\n\n" {
[tools_descartes_teastore_auth_rest_AuthCartRest]
portin " " as AuthCartRest.requires.SERVICE_HOST_cart
"AuthCartRest.requires.SERVICE_HOST_cart"--[tools_descartes_teastore_auth_rest_AuthCartRest]
}
interface "SERVICE-HOST/cart" as interface.SERVICE_HOST_cart
interface.SERVICE_HOST_cart--"AuthCartRest.requires.SERVICE_HOST_cart"
component "AuthUserActionsRest\n\n\n\n\n\n" {
[tools_descartes_teastore_auth_rest_AuthUserActionsRest]
portin " " as AuthUserActionsRest.requires.SERVICE_HOST_useractions
"AuthUserActionsRest.requires.SERVICE_HOST_useractions"--[tools_descartes_teastore_auth_rest_AuthUserActionsRest]
}
interface "SERVICE-HOST/useractions" as interface.SERVICE_HOST_useractions
interface.SERVICE_HOST_useractions--"AuthUserActionsRest.requires.SERVICE_HOST_useractions"
component "CacheManagerEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_CacheManagerEndpoint]
portin " " as CacheManagerEndpoint.requires.SERVICE_HOST_cache
"CacheManagerEndpoint.requires.SERVICE_HOST_cache"--[tools_descartes_teastore_persistence_rest_CacheManagerEndpoint]
}
interface "SERVICE-HOST/cache" as interface.SERVICE_HOST_cache
interface.SERVICE_HOST_cache--"CacheManagerEndpoint.requires.SERVICE_HOST_cache"
component "CartActionServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_CartActionServlet]
}
component "CartServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_CartServlet]
portin " " as CartServlet.requires.SERVICE_HOST_cart_GET_
"CartServlet.requires.SERVICE_HOST_cart_GET_"--[tools_descartes_teastore_webui_servlet_CartServlet]
}
interface "SERVICE-HOST/cart[GET]" as interface.SERVICE_HOST_cart_GET_
interface.SERVICE_HOST_cart_GET_--"CartServlet.requires.SERVICE_HOST_cart_GET_"
component "CategoryEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_CategoryEndpoint]
}
component "CategoryServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_CategoryServlet]
}
component "DataBaseActionServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_DataBaseActionServlet]
}
component "DataBaseServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_DataBaseServlet]
}
component "DatabaseGenerationEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_DatabaseGenerationEndpoint]
portin " " as DatabaseGenerationEndpoint.requires.SERVICE_HOST_generatedb
"DatabaseGenerationEndpoint.requires.SERVICE_HOST_generatedb"--[tools_descartes_teastore_persistence_rest_DatabaseGenerationEndpoint]
}
interface "SERVICE-HOST/generatedb" as interface.SERVICE_HOST_generatedb
interface.SERVICE_HOST_generatedb--"DatabaseGenerationEndpoint.requires.SERVICE_HOST_generatedb"
component "DisplayLogs\n\n\n\n\n\n" {
[tools_descartes_teastore_kieker_rabbitmq_DisplayLogs]
}
component "ErrorServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_ErrorServlet]
}
component "ImageProviderEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_image_rest_ImageProviderEndpoint]
portin " " as ImageProviderEndpoint.requires.SERVICE_HOST_image
"ImageProviderEndpoint.requires.SERVICE_HOST_image"--[tools_descartes_teastore_image_rest_ImageProviderEndpoint]
}
interface "SERVICE-HOST/image" as interface.SERVICE_HOST_image
interface.SERVICE_HOST_image--"ImageProviderEndpoint.requires.SERVICE_HOST_image"
component "IndexServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_kieker_rabbitmq_IndexServlet]
[tools_descartes_teastore_persistence_servlet_IndexServlet]
[tools_descartes_teastore_webui_servlet_IndexServlet]
[tools_descartes_teastore_recommender_servlet_IndexServlet]
[tools_descartes_teastore_registry_servlet_IndexServlet]
}
component "LoginActionServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_LoginActionServlet]
}
component "LoginServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_LoginServlet]
}
component "OrderEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_OrderEndpoint]
portin " " as OrderEndpoint.requires.SERVICE_HOST_orders_user
"OrderEndpoint.requires.SERVICE_HOST_orders_user"--[tools_descartes_teastore_persistence_rest_OrderEndpoint]
}
interface "SERVICE-HOST/orders/user" as interface.SERVICE_HOST_orders_user
interface.SERVICE_HOST_orders_user--"OrderEndpoint.requires.SERVICE_HOST_orders_user"
component "OrderItemEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_OrderItemEndpoint]
portin " " as OrderItemEndpoint.requires.SERVICE_HOST_orderitems
"OrderItemEndpoint.requires.SERVICE_HOST_orderitems"--[tools_descartes_teastore_persistence_rest_OrderItemEndpoint]
}
interface "SERVICE-HOST/orderitems" as interface.SERVICE_HOST_orderitems
interface.SERVICE_HOST_orderitems--"OrderItemEndpoint.requires.SERVICE_HOST_orderitems"
component "OrderServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_OrderServlet]
}
component "ProductEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_ProductEndpoint]
portin " " as ProductEndpoint.requires.SERVICE_HOST_products
"ProductEndpoint.requires.SERVICE_HOST_products"--[tools_descartes_teastore_persistence_rest_ProductEndpoint]
}
interface "SERVICE-HOST/products" as interface.SERVICE_HOST_products
interface.SERVICE_HOST_products--"ProductEndpoint.requires.SERVICE_HOST_products"
component "ProductServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_ProductServlet]
}
component "ProfileServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_ProfileServlet]
}
component "ReadyRest\n\n\n\n\n\n" {
[tools_descartes_teastore_auth_rest_ReadyRest]
[tools_descartes_teastore_webui_rest_ReadyRest]
portin " " as ReadyRest.requires.SERVICE_HOST_ready_isready
"ReadyRest.requires.SERVICE_HOST_ready_isready"--[tools_descartes_teastore_auth_rest_ReadyRest]
"ReadyRest.requires.SERVICE_HOST_ready_isready"--[tools_descartes_teastore_webui_rest_ReadyRest]
"ReadyRest.requires.SERVICE_HOST_ready_isready"--[tools_descartes_teastore_auth_rest_ReadyRest]
"ReadyRest.requires.SERVICE_HOST_ready_isready"--[tools_descartes_teastore_webui_rest_ReadyRest]
}
interface "SERVICE-HOST/ready/isready" as interface.SERVICE_HOST_ready_isready
interface.SERVICE_HOST_ready_isready--"ReadyRest.requires.SERVICE_HOST_ready_isready"
component "RecommendEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_recommender_rest_RecommendEndpoint]
portin " " as RecommendEndpoint.requires.SERVICE_HOST_recommend
"RecommendEndpoint.requires.SERVICE_HOST_recommend"--[tools_descartes_teastore_recommender_rest_RecommendEndpoint]
}
interface "SERVICE-HOST/recommend" as interface.SERVICE_HOST_recommend
interface.SERVICE_HOST_recommend--"RecommendEndpoint.requires.SERVICE_HOST_recommend"
component "RecommendSingleEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_recommender_rest_RecommendSingleEndpoint]
portin " " as RecommendSingleEndpoint.requires.SERVICE_HOST_recommendsingle
"RecommendSingleEndpoint.requires.SERVICE_HOST_recommendsingle"--[tools_descartes_teastore_recommender_rest_RecommendSingleEndpoint]
}
interface "SERVICE-HOST/recommendsingle" as interface.SERVICE_HOST_recommendsingle
interface.SERVICE_HOST_recommendsingle--"RecommendSingleEndpoint.requires.SERVICE_HOST_recommendsingle"
component "RegistryREST\n\n\n\n\n\n" {
[tools_descartes_teastore_registry_rest_RegistryREST]
portin " " as RegistryREST.requires.SERVICE_HOST_services
"RegistryREST.requires.SERVICE_HOST_services"--[tools_descartes_teastore_registry_rest_RegistryREST]
}
interface "SERVICE-HOST/services" as interface.SERVICE_HOST_services
interface.SERVICE_HOST_services--"RegistryREST.requires.SERVICE_HOST_services"
component "Reset\n\n\n\n\n\n" {
[tools_descartes_teastore_kieker_rabbitmq_Reset]
}
component "StatusServlet\n\n\n\n\n\n" {
[tools_descartes_teastore_webui_servlet_StatusServlet]
}
component "TrainEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_recommender_rest_TrainEndpoint]
portin " " as TrainEndpoint.requires.SERVICE_HOST_train
"TrainEndpoint.requires.SERVICE_HOST_train"--[tools_descartes_teastore_recommender_rest_TrainEndpoint]
}
interface "SERVICE-HOST/train" as interface.SERVICE_HOST_train
interface.SERVICE_HOST_train--"TrainEndpoint.requires.SERVICE_HOST_train"
component "UserEndpoint\n\n\n\n\n\n" {
[tools_descartes_teastore_persistence_rest_UserEndpoint]
portin " " as UserEndpoint.requires.SERVICE_HOST_users_name
"UserEndpoint.requires.SERVICE_HOST_users_name"--[tools_descartes_teastore_persistence_rest_UserEndpoint]
}
interface "SERVICE-HOST/users/name" as interface.SERVICE_HOST_users_name
interface.SERVICE_HOST_users_name--"UserEndpoint.requires.SERVICE_HOST_users_name"

@enduml
