<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_VC0VzOWWEe6oltGbgn1GeA">
  <components__Repository xsi:type="repository:BasicComponent" id="_VCjQBuWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCjQBeWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_VCjQA-WWEe6oltGbgn1GeA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VB1eWOWWEe6oltGbgn1GeA" describedService__SEFF="_U8Ro4OWWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_VBzpIeWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB1eVeWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB1eVeWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VBzpIeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB1eVuWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB1eUuWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB1eVOWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VBzpIuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB1eUOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VB1eUOWWEe6oltGbgn1GeA" entityName="Switch Branch" predecessor_AbstractAction="_VBzpIuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB1eUeWWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB03Q-WWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB03ReWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB0QMOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB0QPOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_VB0QPOWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB0QMOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB0QPeWWEe6oltGbgn1GeA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB0QOeWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_VB0QO-WWEe6oltGbgn1GeA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_VB0QMeWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB0QN-WWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_VB0QN-WWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB0QMeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB0QOOWWEe6oltGbgn1GeA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB0QNOWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_VB0QNuWWEe6oltGbgn1GeA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_VB0QMuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB0QM-WWEe6oltGbgn1GeA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_VB0QM-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB0QMuWWEe6oltGbgn1GeA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_VB0QOOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB0QN-WWEe6oltGbgn1GeA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB0QPeWWEe6oltGbgn1GeA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_VB0QPOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB0QPuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB0QPuWWEe6oltGbgn1GeA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_VB0QPeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB03QOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB03QOWWEe6oltGbgn1GeA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_VB0QPuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB03QeWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB03QeWWEe6oltGbgn1GeA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_VB03QOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB03QuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB03QuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB03QeWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB03SeWWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB03S-WWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB03RuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB03R-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB03R-WWEe6oltGbgn1GeA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_VB03RuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB03SOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB03SOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB03R-WWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB03TuWWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB03UOWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB03TOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB03TeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB03TeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB03TOWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB1eUeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB1eUOWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_VB1eVuWWEe6oltGbgn1GeA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_VB1eVeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB1eV-WWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VB1eV-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB1eVuWWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_VCmTVOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCmTU-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAeWWEe6oltGbgn1GeA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VB3TjOWWEe6oltGbgn1GeA" describedService__SEFF="_U8SP8-WWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_VB1eWuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2FYOWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB2FYOWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB1eWuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2FYeWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB1eXuWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB1eYOWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB1eW-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB1eXOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB1eXOWWEe6oltGbgn1GeA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_VB1eW-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB1eXeWWEe6oltGbgn1GeA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB1eXeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB1eXOWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2FYeWWEe6oltGbgn1GeA" entityName="stopWatch.start()" predecessor_AbstractAction="_VB2FYOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB3TiuWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB3TiuWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB2FYeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB3Ti-WWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB3Th-WWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB3TieWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB2FYuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB3TheWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VB3TheWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB2FYuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB3ThuWWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB3TguWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_VB3ThOWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB2FY-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2sduWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_VB2sduWWEe6oltGbgn1GeA" entityName="Switch Branch" predecessor_AbstractAction="_VB2FY-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB2sd-WWEe6oltGbgn1GeA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB2FbuWWEe6oltGbgn1GeA">
                      <branchBehaviour_BranchTransition id="_VB2FcOWWEe6oltGbgn1GeA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_VB2FZOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2Fa-WWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_VB2Fa-WWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB2FZOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2FbOWWEe6oltGbgn1GeA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB2FaOWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_VB2FauWWEe6oltGbgn1GeA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_VB2FZeWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2FZuWWEe6oltGbgn1GeA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2FZuWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB2FZeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2FZ-WWEe6oltGbgn1GeA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_VB2FZ-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB2FZuWWEe6oltGbgn1GeA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2FbOWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB2Fa-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB2FbeWWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_VB2FbeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB2FbOWWEe6oltGbgn1GeA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB2FdOWWEe6oltGbgn1GeA">
                      <branchBehaviour_BranchTransition id="_VB2FduWWEe6oltGbgn1GeA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_VB2FceWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2FcuWWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2FcuWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB2FceWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2Fc-WWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_VB2Fc-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB2FcuWWEe6oltGbgn1GeA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB2sc-WWEe6oltGbgn1GeA">
                      <branchBehaviour_BranchTransition id="_VB2sdeWWEe6oltGbgn1GeA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_VB2scOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB2sceWWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2sceWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB2scOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2scuWWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_VB2scuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB2sceWWEe6oltGbgn1GeA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2sd-WWEe6oltGbgn1GeA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_VB2sduWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2seOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2seOWWEe6oltGbgn1GeA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_VB2sd-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB2seeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2seeWWEe6oltGbgn1GeA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_VB2seOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2seuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2seuWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB2seeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2se-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2se-WWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB2seuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB2sfOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2sfOWWEe6oltGbgn1GeA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_VB2se-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB2sfeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB2sfeWWEe6oltGbgn1GeA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_VB2sfOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB3TgOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB3TgOWWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB2sfeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB3TgeWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB3TgeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB3TgOWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB3ThuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB3TheWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VB3Ti-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB3TiuWWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_VCovmOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCovluWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAOWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCovl-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAuWWEe6oltGbgn1GeA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VBv-weWWEe6oltGbgn1GeA" describedService__SEFF="_U8Ro5OWWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_U8ttweWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBvXsOWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VBvXsOWWEe6oltGbgn1GeA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_U8ttweWWEe6oltGbgn1GeA" successor_AbstractAction="_VBv-wOWWEe6oltGbgn1GeA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VBv-wOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBvXsOWWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VBzCI-WWEe6oltGbgn1GeA" describedService__SEFF="_U7TYgOWWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_VBv-w-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBybBuWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VBybBuWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VBv-w-WWEe6oltGbgn1GeA" successor_AbstractAction="_VBzCIeWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VBxM4OWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VBxz8OWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VBv-xOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBwl0OWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VBwl0OWWEe6oltGbgn1GeA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_VBv-xOWWEe6oltGbgn1GeA" successor_AbstractAction="_VBwl0eWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VBwl0eWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBwl0OWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VBybA-WWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VBybBeWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VBybAOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBybAeWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VBybAeWWEe6oltGbgn1GeA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_VBybAOWWEe6oltGbgn1GeA" successor_AbstractAction="_VBybAuWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VBybAuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBybAeWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VBzCIeWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VBybBuWWEe6oltGbgn1GeA" successor_AbstractAction="_VBzCIuWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VBzCHuWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VBzCIOWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VBybB-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBzCHOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VBzCHOWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VBybB-WWEe6oltGbgn1GeA" successor_AbstractAction="_VBzCHeWWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VBzCFOWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_VBzCFuWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VBzCEOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBzCEeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VBzCEeWWEe6oltGbgn1GeA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_VBzCEOWWEe6oltGbgn1GeA" successor_AbstractAction="_VBzCEuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VBzCEuWWEe6oltGbgn1GeA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_VBzCEeWWEe6oltGbgn1GeA" successor_AbstractAction="_VBzCE-WWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VBzCE-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBzCEuWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VBzCGeWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_VBzCG-WWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VBzCF-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VBzCGOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VBzCGOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBzCF-WWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VBzCHeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBzCHOWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VBzCIuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VBzCIeWWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_VCtBDuWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCtBDeWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_VCio-uWWEe6oltGbgn1GeA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VB9aKOWWEe6oltGbgn1GeA" describedService__SEFF="_U8S3AOWWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_VB6W3-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB695eWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB695eWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB6W3-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB695uWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB694uWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB695OWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB6W4OWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB694OWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB694OWWEe6oltGbgn1GeA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_VB6W4OWWEe6oltGbgn1GeA" successor_AbstractAction="_VB694eWWEe6oltGbgn1GeA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB694eWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB694OWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_VB695uWWEe6oltGbgn1GeA" entityName="stopWatch.start()" predecessor_AbstractAction="_VB695eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB9aJeWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB9aJeWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB695uWWEe6oltGbgn1GeA" successor_AbstractAction="_VB9aJuWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB9aIuWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB9aJOWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB695-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB9aIOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VB9aIOWWEe6oltGbgn1GeA" entityName="Switch Branch" predecessor_AbstractAction="_VB695-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB9aIeWWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB8MA-WWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB8MBeWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB696OWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB696eWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB696eWWEe6oltGbgn1GeA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_VB696OWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k9eWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_VB7k9eWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB696eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k9uWWEe6oltGbgn1GeA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB7k8uWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_VB7k9OWWEe6oltGbgn1GeA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_VB696uWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB7k8OWWEe6oltGbgn1GeA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_VB7k8OWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB696uWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k8eWWEe6oltGbgn1GeA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB697eWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_VB697-WWEe6oltGbgn1GeA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_VB696-WWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB697OWWEe6oltGbgn1GeA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_VB697OWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB696-WWEe6oltGbgn1GeA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_VB7k8eWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB7k8OWWEe6oltGbgn1GeA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k9uWWEe6oltGbgn1GeA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_VB7k9eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k9-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k9-WWEe6oltGbgn1GeA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_VB7k9uWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k-OWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k-OWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB7k9-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k-eWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k-eWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB7k-OWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k-uWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k-uWWEe6oltGbgn1GeA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_VB7k-eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k--WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB7k--WWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB7k-uWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k_OWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k_OWWEe6oltGbgn1GeA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_VB7k--WWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k_eWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k_eWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB7k_OWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k_uWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k_uWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB7k_eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB7k_-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB7k_-WWEe6oltGbgn1GeA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_VB7k_uWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8MAOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB8MAOWWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB7k_-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB8MAeWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8MAeWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB8MAOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8MAuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB8MAuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB8MAeWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB8zFuWWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB8zGOWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB8MBuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB8MB-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8MB-WWEe6oltGbgn1GeA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_VB8MBuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zEOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8zEOWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB8MB-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zEeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8zEeWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB8zEOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zEuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8zEuWWEe6oltGbgn1GeA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_VB8zEeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zE-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB8zE-WWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB8zEuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zFOWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8zFOWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB8zE-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zFeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB8zFeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB8zFOWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB8zHOWWEe6oltGbgn1GeA">
                <branchBehaviour_BranchTransition id="_VB8zHuWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB8zGeWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB8zGuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB8zGuWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB8zGeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB8zG-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB8zG-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB8zGuWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB9aIeWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB9aIOWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_VB9aJuWWEe6oltGbgn1GeA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_VB9aJeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB9aJ-WWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VB9aJ-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB9aJuWWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_VCvdR-WWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_VCvdSeWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCvdSOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_VCjQBOWWEe6oltGbgn1GeA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_VB6W3eWWEe6oltGbgn1GeA" describedService__SEFF="_U8S3BOWWEe6oltGbgn1GeA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_VB3TjuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB36luWWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB36luWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB3TjuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36l-WWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB36k-WWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_VB36leWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB36kOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB36keWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB36keWWEe6oltGbgn1GeA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_VB36kOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36kuWWEe6oltGbgn1GeA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB36kuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB36keWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36l-WWEe6oltGbgn1GeA" entityName="stopWatch.start()" predecessor_AbstractAction="_VB36luWWEe6oltGbgn1GeA" successor_AbstractAction="_VB6W2-WWEe6oltGbgn1GeA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_VB6W2-WWEe6oltGbgn1GeA" entityName="Switch Branch" predecessor_AbstractAction="_VB36l-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB6W3OWWEe6oltGbgn1GeA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB5IteWWEe6oltGbgn1GeA">
          <branchBehaviour_BranchTransition id="_VB5It-WWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB36mOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB36meWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36meWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB36mOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36muWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36muWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB36meWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36m-WWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36m-WWEe6oltGbgn1GeA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_VB36muWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36nOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36nOWWEe6oltGbgn1GeA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_VB36m-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB36neWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB36neWWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB36nOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5IseWWEe6oltGbgn1GeA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VB5IseWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB36neWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5IsuWWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB4hpeWWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_VB5IsOWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB36nuWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB36n-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36n-WWEe6oltGbgn1GeA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_VB36nuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB36oOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36oOWWEe6oltGbgn1GeA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_VB36n-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB36oeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB36oeWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB36oOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB4hoOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB4hoOWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB36oeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB4hoeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB4hoeWWEe6oltGbgn1GeA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_VB4hoOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB4houWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB4houWWEe6oltGbgn1GeA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_VB4hoeWWEe6oltGbgn1GeA" successor_AbstractAction="_VB4ho-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB4ho-WWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB4houWWEe6oltGbgn1GeA" successor_AbstractAction="_VB4hpOWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB4hpOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB4ho-WWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5IsuWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB5IseWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5Is-WWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5Is-WWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB5IsuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5ItOWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB5ItOWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB5Is-WWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB6W0uWWEe6oltGbgn1GeA">
          <branchBehaviour_BranchTransition id="_VB6W1OWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB5IuOWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB5vyuWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_VB5vyuWWEe6oltGbgn1GeA" entityName="If Branch" predecessor_AbstractAction="_VB5IuOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vy-WWEe6oltGbgn1GeA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB5vx-WWEe6oltGbgn1GeA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_VB5vyeWWEe6oltGbgn1GeA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_VB5IueWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB5IuuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5IuuWWEe6oltGbgn1GeA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_VB5IueWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vwOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vwOWWEe6oltGbgn1GeA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_VB5IuuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vweWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vweWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB5vwOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vwuWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vwuWWEe6oltGbgn1GeA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_VB5vweWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vw-WWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vw-WWEe6oltGbgn1GeA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_VB5vwuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vxOWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vxOWWEe6oltGbgn1GeA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_VB5vw-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vxeWWEe6oltGbgn1GeA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_VB5vxeWWEe6oltGbgn1GeA" entityName="deferredResult" predecessor_AbstractAction="_VB5vxOWWEe6oltGbgn1GeA" successor_AbstractAction="_VB5vxuWWEe6oltGbgn1GeA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_VB5vxuWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB5vxeWWEe6oltGbgn1GeA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB5vy-WWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB5vyuWWEe6oltGbgn1GeA" successor_AbstractAction="_VB6W0OWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB6W0OWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB5vy-WWEe6oltGbgn1GeA" successor_AbstractAction="_VB6W0eWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB6W0eWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB6W0OWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_VB6W2OWWEe6oltGbgn1GeA">
          <branchBehaviour_BranchTransition id="_VB6W2uWWEe6oltGbgn1GeA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_VB6W1eWWEe6oltGbgn1GeA" entityName="Start Action" successor_AbstractAction="_VB6W1uWWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_VB6W1uWWEe6oltGbgn1GeA" entityName="stopWatch.stop()" predecessor_AbstractAction="_VB6W1eWWEe6oltGbgn1GeA" successor_AbstractAction="_VB6W1-WWEe6oltGbgn1GeA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_VB6W1-WWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB6W1uWWEe6oltGbgn1GeA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_VB6W3OWWEe6oltGbgn1GeA" entityName="Stop Action" predecessor_AbstractAction="_VB6W2-WWEe6oltGbgn1GeA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzHoeWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_VC0VwOWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCmTVOWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC1j4OWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCmTU-WWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzHoOWWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VwOWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzHoOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAeWWEe6oltGbgn1GeA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzHouWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_VC0VyuWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCvdR-WWEe6oltGbgn1GeA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzuseWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_VC0VxuWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCvdSeWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC1j4uWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCvdSOWWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzusOWWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VxuWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzusOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_VCjQBOWWEe6oltGbgn1GeA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzutOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_VC0VwuWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCovmOWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC080OWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCovl-WWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzusuWWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VwuWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC080uWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCovluWWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzus-WWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VwuWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzusuWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAuWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzus-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_VCjQAOWWEe6oltGbgn1GeA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzutuWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_VC0VxOWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCtBDuWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC080eWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCtBDeWWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzuteWWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VxOWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzuteWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_VCio-uWWEe6oltGbgn1GeA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_VCzuuOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_VC0VyOWWEe6oltGbgn1GeA" encapsulatedComponent__AssemblyContext="_VCjQBuWWEe6oltGbgn1GeA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_VC1j4eWWEe6oltGbgn1GeA" innerProvidedRole_ProvidedDelegationConnector="_VCjQBeWWEe6oltGbgn1GeA" outerProvidedRole_ProvidedDelegationConnector="_VCzut-WWEe6oltGbgn1GeA" assemblyContext_ProvidedDelegationConnector="_VC0VyOWWEe6oltGbgn1GeA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_VCzut-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_VCjQA-WWEe6oltGbgn1GeA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCio-uWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_U8S3AOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_U8SP8uWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U8RB0OWWEe6oltGbgn1GeA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCjQAOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_U8Ro5OWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_U7SxceWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U8Ro4-WWEe6oltGbgn1GeA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCjQAeWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_U8SP8-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_U8SP8uWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U8RB0OWWEe6oltGbgn1GeA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCjQAuWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_U7TYgOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_U7SxceWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U7RjUOWWEe6oltGbgn1GeA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_U7SxcOWWEe6oltGbgn1GeA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCjQA-WWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_U8Ro4OWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_U7SxceWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U8RB0OWWEe6oltGbgn1GeA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_VCjQBOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_U8S3BOWWEe6oltGbgn1GeA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_U8SP8uWWEe6oltGbgn1GeA">
      <parameters__OperationSignature dataType__Parameter="_U8S3A-WWEe6oltGbgn1GeA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U7RjUOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U7SxcOWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U7SxceWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U8RB0OWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U8Ro4-WWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U8SP8uWWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_U8S3A-WWEe6oltGbgn1GeA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
</repository:Repository>
