<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_SEzm6jHREe-fdeqnjP2MgA">
  <components__Repository xsi:type="repository:BasicComponent" id="_SEihJDHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEihIzHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GjHREe-fdeqnjP2MgA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD19kDHREe-fdeqnjP2MgA" describedService__SEFF="_R99YADHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_R-WZkTHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SDy6QDHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SDy6QDHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_R-WZkTHREe-fdeqnjP2MgA" successor_AbstractAction="_SDzhUDHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SDxsIDHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SDyTMDHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_R-YOwDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SDxFEDHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SDxFEDHREe-fdeqnjP2MgA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_R-YOwDHREe-fdeqnjP2MgA" successor_AbstractAction="_SDxFETHREe-fdeqnjP2MgA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SDxFETHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SDxFEDHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SDzhUDHREe-fdeqnjP2MgA" entityName="stopWatch.start()" predecessor_AbstractAction="_SDy6QDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WjTHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD1WjTHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SDzhUDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WjjHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD1WijHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD1WjDHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SDzhUTHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD1WiDHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD1WiDHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SDzhUTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WiTHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD1WhTHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SD1WhzHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SDzhUjHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD0vfDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SD0vfDHREe-fdeqnjP2MgA" entityName="Switch Branch" predecessor_AbstractAction="_SDzhUjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0vfTHREe-fdeqnjP2MgA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD0IajHREe-fdeqnjP2MgA">
                      <branchBehaviour_BranchTransition id="_SD0IbDHREe-fdeqnjP2MgA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SD0IYDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD0IZzHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SD0IZzHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD0IYDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0IaDHREe-fdeqnjP2MgA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD0IZDHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SD0IZjHREe-fdeqnjP2MgA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SD0IYTHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD0IYjHREe-fdeqnjP2MgA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0IYjHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD0IYTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0IYzHREe-fdeqnjP2MgA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SD0IYzHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD0IYjHREe-fdeqnjP2MgA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0IaDHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD0IZzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0IaTHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SD0IaTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD0IaDHREe-fdeqnjP2MgA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD0vczHREe-fdeqnjP2MgA">
                      <branchBehaviour_BranchTransition id="_SD0vdTHREe-fdeqnjP2MgA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SD0vcDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD0vcTHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vcTHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD0vcDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0vcjHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SD0vcjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD0vcTHREe-fdeqnjP2MgA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD0veTHREe-fdeqnjP2MgA">
                      <branchBehaviour_BranchTransition id="_SD0vezHREe-fdeqnjP2MgA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SD0vdjHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD0vdzHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vdzHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD0vdjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0veDHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SD0veDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD0vdzHREe-fdeqnjP2MgA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vfTHREe-fdeqnjP2MgA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_SD0vfDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0vfjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vfjHREe-fdeqnjP2MgA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_SD0vfTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0vfzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vfzHREe-fdeqnjP2MgA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_SD0vfjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD0vgDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD0vgDHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD0vfzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WgDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD1WgDHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD0vgDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WgTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD1WgTHREe-fdeqnjP2MgA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_SD1WgDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WgjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD1WgjHREe-fdeqnjP2MgA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_SD1WgTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WgzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD1WgzHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD1WgjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD1WhDHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD1WhDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD1WgzHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD1WiTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD1WiDHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD1WjjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD1WjTHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SElkczHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SElkcjHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_SEihIjHREe-fdeqnjP2MgA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD3yzjHREe-fdeqnjP2MgA" describedService__SEFF="_R98w8DHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SD19kjHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD19mTHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD19mTHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD19kjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD19mjHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD19ljHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD19mDHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD19kzHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD19lDHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD19lDHREe-fdeqnjP2MgA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_SD19kzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD19lTHREe-fdeqnjP2MgA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD19lTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD19lDHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SD19mjHREe-fdeqnjP2MgA" entityName="stopWatch.start()" predecessor_AbstractAction="_SD19mTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3yyzHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD3yyzHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD19mjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3yzDHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD3yyDHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD3yyjHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD19mzHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD3yxjHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD3yxjHREe-fdeqnjP2MgA" entityName="Switch Branch" predecessor_AbstractAction="_SD19mzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3yxzHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD3LsjHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD3LtDHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD19nDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD19nTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD19nTHREe-fdeqnjP2MgA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_SD19nDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kpTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SD2kpTHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD19nTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kpjHREe-fdeqnjP2MgA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD2kojHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SD2kpDHREe-fdeqnjP2MgA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SD19njHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD2koDHREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SD2koDHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD19njHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2koTHREe-fdeqnjP2MgA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD19oTHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SD19ozHREe-fdeqnjP2MgA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SD19nzHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD19oDHREe-fdeqnjP2MgA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SD19oDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD19nzHREe-fdeqnjP2MgA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SD2koTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD2koDHREe-fdeqnjP2MgA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2kpjHREe-fdeqnjP2MgA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SD2kpTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kpzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2kpzHREe-fdeqnjP2MgA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SD2kpjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kqDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2kqDHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD2kpzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kqTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2kqTHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD2kqDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kqjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2kqjHREe-fdeqnjP2MgA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_SD2kqTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2kqzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD2kqzHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD2kqjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2krDHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2krDHREe-fdeqnjP2MgA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SD2kqzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2krTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2krTHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD2krDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2krjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2krjHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD2krTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2krzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD2krzHREe-fdeqnjP2MgA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SD2krjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD2ksDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD2ksDHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD2krzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LsDHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LsDHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD2ksDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LsTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD3LsTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3LsDHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD3LvTHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD3LvzHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD3LtTHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD3LtjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LtjHREe-fdeqnjP2MgA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_SD3LtTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LtzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LtzHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD3LtjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LuDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LuDHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD3LtzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LuTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LuTHREe-fdeqnjP2MgA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_SD3LuDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LujHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD3LujHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD3LuTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LuzHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3LuzHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD3LujHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3LvDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD3LvDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3LuzHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD3ywzHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD3yxTHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD3ywDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD3ywTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3ywTHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD3ywDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3ywjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD3ywjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3ywTHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD3yxzHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3yxjHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SD3yzDHREe-fdeqnjP2MgA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SD3yyzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD3yzTHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD3yzTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3yzDHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SEoAtTHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEoAtDHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_SEihIDHREe-fdeqnjP2MgA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD5A7THREe-fdeqnjP2MgA" describedService__SEFF="_R9LU4DHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SD3y0DHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5A6jHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD5A6jHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD3y0DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5A6zHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD5A5zHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD5A6THREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD3y0THREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5A5THREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD5A5THREe-fdeqnjP2MgA" entityName="Switch Branch" predecessor_AbstractAction="_SD3y0THREe-fdeqnjP2MgA" successor_AbstractAction="_SD5A5jHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD4Z3DHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD4Z3jHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD3y0jHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD4Z1jHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_SD4Z1jHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD3y0jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z1zHREe-fdeqnjP2MgA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD4Z0zHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_SD4Z1THREe-fdeqnjP2MgA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_SD3y0zHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD4Z0THREe-fdeqnjP2MgA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_SD4Z0THREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD3y0zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z0jHREe-fdeqnjP2MgA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD3y1jHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_SD4Z0DHREe-fdeqnjP2MgA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_SD3y1DHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD3y1THREe-fdeqnjP2MgA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_SD3y1THREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD3y1DHREe-fdeqnjP2MgA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_SD4Z0jHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD4Z0THREe-fdeqnjP2MgA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD4Z1zHREe-fdeqnjP2MgA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_SD4Z1jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z2DHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD4Z2DHREe-fdeqnjP2MgA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_SD4Z1zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z2THREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD4Z2THREe-fdeqnjP2MgA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_SD4Z2DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z2jHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD4Z2jHREe-fdeqnjP2MgA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SD4Z2THREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z2zHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD4Z2zHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD4Z2jHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD4Z4jHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD4Z5DHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD4Z3zHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD4Z4DHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD4Z4DHREe-fdeqnjP2MgA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_SD4Z3zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD4Z4THREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD4Z4THREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD4Z4DHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD5A4jHREe-fdeqnjP2MgA">
                <branchBehaviour_BranchTransition id="_SD5A5DHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD5A4DHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5A4THREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD5A4THREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD5A4DHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD5A5jHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD5A5THREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5A6zHREe-fdeqnjP2MgA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_SD5A6jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5A7DHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD5A7DHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD5A6zHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SEqc9DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEqc8zHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_SEihITHREe-fdeqnjP2MgA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD62JDHREe-fdeqnjP2MgA" describedService__SEFF="_R98J4jHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SD5A7zHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5A9jHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD5A9jHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD5A7zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n8DHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD5A8zHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD5A9THREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD5A8DHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5A8THREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD5A8THREe-fdeqnjP2MgA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_SD5A8DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5A8jHREe-fdeqnjP2MgA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD5A8jHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD5A8THREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n8DHREe-fdeqnjP2MgA" entityName="stopWatch.start()" predecessor_AbstractAction="_SD5A9jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62IjHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD62IjHREe-fdeqnjP2MgA" entityName="Switch Branch" predecessor_AbstractAction="_SD5n8DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62IzHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD6PBDHREe-fdeqnjP2MgA">
          <branchBehaviour_BranchTransition id="_SD6PBjHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD5n8THREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5n8jHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n8jHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD5n8THREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n8zHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n8zHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD5n8jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n9DHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n9DHREe-fdeqnjP2MgA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_SD5n8zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n9THREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n9THREe-fdeqnjP2MgA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SD5n9DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n9jHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD5n9jHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD5n9THREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PADHREe-fdeqnjP2MgA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD6PADHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD5n9jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PATHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD5oADHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SD5oAjHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD5n9zHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD5n-DHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n-DHREe-fdeqnjP2MgA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SD5n9zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n-THREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n-THREe-fdeqnjP2MgA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SD5n-DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n-jHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n-jHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD5n-THREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n-zHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n-zHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD5n-jHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n_DHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n_DHREe-fdeqnjP2MgA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SD5n-zHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n_THREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD5n_THREe-fdeqnjP2MgA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SD5n_DHREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n_jHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD5n_jHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD5n_THREe-fdeqnjP2MgA" successor_AbstractAction="_SD5n_zHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD5n_zHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD5n_jHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PATHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD6PADHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PAjHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PAjHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD6PATHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PAzHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD6PAzHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD6PAjHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD62GTHREe-fdeqnjP2MgA">
          <branchBehaviour_BranchTransition id="_SD62GzHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD6PBzHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD62FTHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD62FTHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD6PBzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62FjHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD62EjHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SD62FDHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD6PCDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD6PCTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PCTHREe-fdeqnjP2MgA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_SD6PCDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PCjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PCjHREe-fdeqnjP2MgA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_SD6PCTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PCzHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PCzHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD6PCjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PDDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PDDHREe-fdeqnjP2MgA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_SD6PCzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PDTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PDTHREe-fdeqnjP2MgA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_SD6PDDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD6PDjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD6PDjHREe-fdeqnjP2MgA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_SD6PDTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62EDHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD62EDHREe-fdeqnjP2MgA" entityName="deferredResult" predecessor_AbstractAction="_SD6PDjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62ETHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD62ETHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD62EDHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD62FjHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD62FTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62FzHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD62FzHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD62FjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62GDHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD62GDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD62FzHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD62HzHREe-fdeqnjP2MgA">
          <branchBehaviour_BranchTransition id="_SD62ITHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD62HDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD62HTHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD62HTHREe-fdeqnjP2MgA" entityName="stopWatch.stop()" predecessor_AbstractAction="_SD62HDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD62HjHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD62HjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD62HTHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD62IzHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD62IjHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SEsSLzHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEsSLTHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GTHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEsSLjHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GzHREe-fdeqnjP2MgA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD8EQDHREe-fdeqnjP2MgA" describedService__SEFF="_R97i0jHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SD7dITHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD7dLjHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD7dLjHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD7dITHREe-fdeqnjP2MgA" successor_AbstractAction="_SD8EPjHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD7dJTHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD7dJzHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD7dIjHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD7dIzHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD7dIzHREe-fdeqnjP2MgA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_SD7dIjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD7dJDHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD7dJDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD7dIzHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD7dKzHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD7dLTHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD7dKDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD7dKTHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_SD7dKTHREe-fdeqnjP2MgA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_SD7dKDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD7dKjHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD7dKjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD7dKTHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_SD8EPjHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD7dLjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD8EPzHREe-fdeqnjP2MgA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD8EOzHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_SD8EPTHREe-fdeqnjP2MgA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_SD7dLzHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD8EOTHREe-fdeqnjP2MgA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_SD8EOTHREe-fdeqnjP2MgA" entityName="If Branch" predecessor_AbstractAction="_SD7dLzHREe-fdeqnjP2MgA" successor_AbstractAction="_SD8EOjHREe-fdeqnjP2MgA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD8EMTHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SD8EMzHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD7dMDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD7dMTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_SD7dMTHREe-fdeqnjP2MgA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_SD7dMDHREe-fdeqnjP2MgA" successor_AbstractAction="_SD7dMjHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD7dMjHREe-fdeqnjP2MgA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_SD7dMTHREe-fdeqnjP2MgA" successor_AbstractAction="_SD8EMDHREe-fdeqnjP2MgA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD8EMDHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD7dMjHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_SD8ENjHREe-fdeqnjP2MgA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_SD8EODHREe-fdeqnjP2MgA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_SD8ENDHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD8ENTHREe-fdeqnjP2MgA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_SD8ENTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD8ENDHREe-fdeqnjP2MgA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_SD8EOjHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD8EOTHREe-fdeqnjP2MgA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD8EPzHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD8EPjHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_SD8rQjHREe-fdeqnjP2MgA" describedService__SEFF="_R98w9DHREe-fdeqnjP2MgA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_SD8EQjHREe-fdeqnjP2MgA" entityName="Start Action" successor_AbstractAction="_SD8rQDHREe-fdeqnjP2MgA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_SD8rQDHREe-fdeqnjP2MgA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_SD8EQjHREe-fdeqnjP2MgA" successor_AbstractAction="_SD8rQTHREe-fdeqnjP2MgA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_SD8rQTHREe-fdeqnjP2MgA" entityName="Stop Action" predecessor_AbstractAction="_SD8rQDHREe-fdeqnjP2MgA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_SEwjnTHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEyYwjHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_SEzm6DHREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SEsSLzHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE0N8jHREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SEsSLTHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEyYwTHREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEzm6DHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE0N8zHREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SEsSLjHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEyYwDHREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEzm6DHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEyYwDHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GzHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEyYwTHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GTHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEyYwzHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_SEzm5jHREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SEwjnTHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEyYxTHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SEzm4jHREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SEoAtTHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE0N9DHREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SEoAtDHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEyYxDHREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEzm4jHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEyYxDHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_SEihIDHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEy_0DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_SEzm4DHREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SElkczHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE01ADHREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SElkcjHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEyYxjHREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEzm4DHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEyYxjHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_SEihIjHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEy_0jHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_SEy_1THREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SEqc9DHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE0N8THREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SEqc8zHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEy_0THREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEy_1THREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEy_0THREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_SEihITHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_SEy_1DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_SEzm5DHREe-fdeqnjP2MgA" encapsulatedComponent__AssemblyContext="_SEihJDHREe-fdeqnjP2MgA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_SE0N8DHREe-fdeqnjP2MgA" innerProvidedRole_ProvidedDelegationConnector="_SEihIzHREe-fdeqnjP2MgA" outerProvidedRole_ProvidedDelegationConnector="_SEy_0zHREe-fdeqnjP2MgA" assemblyContext_ProvidedDelegationConnector="_SEzm5DHREe-fdeqnjP2MgA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_SEy_0zHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_SEh6GjHREe-fdeqnjP2MgA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEh6GTHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_R97i0jHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_R9Kt0DHREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R97i0DHREe-fdeqnjP2MgA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_R97i0THREe-fdeqnjP2MgA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEh6GjHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_R99YADHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_R98J4THREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R9JfsDHREe-fdeqnjP2MgA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEh6GzHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_R98w9DHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_R9Kt0DHREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R98w8zHREe-fdeqnjP2MgA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEihIDHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_R9LU4DHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_R9Kt0DHREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R9JfsDHREe-fdeqnjP2MgA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEihITHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_R98J4jHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_R98J4THREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R98J4DHREe-fdeqnjP2MgA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_SEihIjHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_R98w8DHREe-fdeqnjP2MgA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_R98J4THREe-fdeqnjP2MgA">
      <parameters__OperationSignature dataType__Parameter="_R9JfsDHREe-fdeqnjP2MgA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R9JfsDHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R9Kt0DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R97i0DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R97i0THREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_model_TeleTanType"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R98J4DHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R98J4THREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_R98w8zHREe-fdeqnjP2MgA" entityName="app_coronawarn_verification_model_Tan"/>
</repository:Repository>
