<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_Z3wgousWEe6Ip7PhoiYteg">
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3fa5usWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3fa6OsWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3fa5-sWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Z3fa5esWEe6Ip7PhoiYteg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z2vNA-sWEe6Ip7PhoiYteg" describedService__SEFF="_ZwgpIusWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Zw640esWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2vNAOsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2vNAOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Zw640esWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2vNAesWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2vM_esWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2vM_-sWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Zw8uAOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2vM--sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2vM--sWEe6Ip7PhoiYteg" entityName="Switch Branch" predecessor_AbstractAction="_Zw8uAOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2vM_OsWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2ul4-sWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z2ul5esWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Zw9VEOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2rik-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2rik-sWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Zw9VEOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2sJoOsWEe6Ip7PhoiYteg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2rikOsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_Z2rikusWEe6Ip7PhoiYteg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Zw9VEesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2q7gOsWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2q7gOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Zw9VEesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2q7gesWEe6Ip7PhoiYteg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Zw98IOsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_Zw-jMOsWEe6Ip7PhoiYteg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_Zw9VEusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Zw9VE-sWEe6Ip7PhoiYteg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_Zw9VE-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Zw9VEusWEe6Ip7PhoiYteg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Z2q7gesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2q7gOsWEe6Ip7PhoiYteg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2sJoOsWEe6Ip7PhoiYteg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_Z2rik-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2sJoesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2sJoesWEe6Ip7PhoiYteg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_Z2sJoOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2ul4OsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2ul4OsWEe6Ip7PhoiYteg" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_Z2sJoesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2ul4esWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2ul4esWEe6Ip7PhoiYteg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_Z2ul4OsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2ul4usWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2ul4usWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2ul4esWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2vM8-sWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z2vM9esWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2vM8OsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2vM8esWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2vM8esWEe6Ip7PhoiYteg" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_Z2vM8OsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2vM8usWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2vM8usWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2vM8esWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2vM-OsWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z2vM-usWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2vM9usWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2vM9-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2vM9-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2vM9usWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2vM_OsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2vM--sWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2vNAesWEe6Ip7PhoiYteg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_Z2vNAOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2vNAusWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z2vNAusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2vNAesWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3ieOusWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3ieOesWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4OsWEe6Ip7PhoiYteg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z21Tk-sWEe6Ip7PhoiYteg" describedService__SEFF="_ZvtX4OsWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Z2y3VusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2zeYOsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2zeYOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2y3VusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zeYesWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2y3WusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2y3XOsWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2y3V-sWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2y3WOsWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2y3WOsWEe6Ip7PhoiYteg" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_Z2y3V-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2y3WesWEe6Ip7PhoiYteg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2y3WesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2y3WOsWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zeYesWEe6Ip7PhoiYteg" entityName="stopWatch.start()" predecessor_AbstractAction="_Z2zeYOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z21TkOsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z21TkOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2zeYesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z21TkesWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z20skusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z20slOsWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2zeYusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z20skOsWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z20skOsWEe6Ip7PhoiYteg" entityName="Switch Branch" predecessor_AbstractAction="_Z2zeYusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20skesWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z20FeesWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z20Fe-sWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2zeY-sWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2zeZOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zeZOsWEe6Ip7PhoiYteg" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_Z2zeY-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zecOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2zecOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2zeZOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zecesWEe6Ip7PhoiYteg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2zebesWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_Z2zeb-sWEe6Ip7PhoiYteg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Z2zeZesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2zea-sWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2zea-sWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2zeZesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zebOsWEe6Ip7PhoiYteg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2zeaOsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_Z2zeausWEe6Ip7PhoiYteg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_Z2zeZusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2zeZ-sWEe6Ip7PhoiYteg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_Z2zeZ-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2zeZusWEe6Ip7PhoiYteg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Z2zebOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2zea-sWEe6Ip7PhoiYteg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zecesWEe6Ip7PhoiYteg" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_Z2zecOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zecusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zecusWEe6Ip7PhoiYteg" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_Z2zecesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zec-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zec-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2zecusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2zedOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2zedOsWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z2zec-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FcOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20FcOsWEe6Ip7PhoiYteg" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_Z2zedOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FcesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z20FcesWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z20FcOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FcusWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20FcusWEe6Ip7PhoiYteg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_Z20FcesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20Fc-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20Fc-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z20FcusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FdOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20FdOsWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z20Fc-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FdesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20FdesWEe6Ip7PhoiYteg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_Z20FdOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FdusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z20FdusWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z20FdesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20Fd-sWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20Fd-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z20FdusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20FeOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z20FeOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z20Fd-sWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z20sh-sWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z20siesWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z20FfOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z20sgOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20sgOsWEe6Ip7PhoiYteg" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_Z20FfOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20sgesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20sgesWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z20sgOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20sgusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20sgusWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z20sgesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20sg-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20sg-sWEe6Ip7PhoiYteg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_Z20sgusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20shOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z20shOsWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z20sg-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20shesWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20shesWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z20shOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20shusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z20shusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z20shesWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z20sjesWEe6Ip7PhoiYteg">
                <branchBehaviour_BranchTransition id="_Z20sj-sWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z20siusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z20si-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z20si-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z20siusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z20sjOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z20sjOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z20si-sWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z20skesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z20skOsWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Z21TkesWEe6Ip7PhoiYteg" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_Z21TkOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z21TkusWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z21TkusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z21TkesWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3k6e-sWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3k6eusWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4esWEe6Ip7PhoiYteg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z23IzOsWEe6Ip7PhoiYteg" describedService__SEFF="_Zwh3QOsWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Z21TlesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z21TnOsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z21TnOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z21TlesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z21TnesWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z21TmesWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z21Tm-sWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z21TlusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z21Tl-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z21Tl-sWEe6Ip7PhoiYteg" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_Z21TlusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z21TmOsWEe6Ip7PhoiYteg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z21TmOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z21Tl-sWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Z21TnesWEe6Ip7PhoiYteg" entityName="stopWatch.start()" predecessor_AbstractAction="_Z21TnOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z23IyusWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z23IyusWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z21TnesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z23Iy-sWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z23Ix-sWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z23IyesWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z21TnusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z23IxesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z23IxesWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z21TnusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z23IxusWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z23IwusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Z23IxOsWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z21Tn-sWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z22htusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_Z22htusWEe6Ip7PhoiYteg" entityName="Switch Branch" predecessor_AbstractAction="_Z21Tn-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22ht-sWEe6Ip7PhoiYteg">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z216qOsWEe6Ip7PhoiYteg">
                      <branchBehaviour_BranchTransition id="_Z216qusWEe6Ip7PhoiYteg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Z21ToOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z216pesWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_Z216pesWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z21ToOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z216pusWEe6Ip7PhoiYteg">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z216ousWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_Z216pOsWEe6Ip7PhoiYteg">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_Z21ToesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z216oOsWEe6Ip7PhoiYteg"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_Z216oOsWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z21ToesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z216oesWEe6Ip7PhoiYteg"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_Z216oesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z216oOsWEe6Ip7PhoiYteg"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_Z216pusWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z216pesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z216p-sWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Z216p-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z216pusWEe6Ip7PhoiYteg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z216rusWEe6Ip7PhoiYteg">
                      <branchBehaviour_BranchTransition id="_Z216sOsWEe6Ip7PhoiYteg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Z216q-sWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z216rOsWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_Z216rOsWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z216q-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z216resWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Z216resWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z216rOsWEe6Ip7PhoiYteg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z22hs-sWEe6Ip7PhoiYteg">
                      <branchBehaviour_BranchTransition id="_Z22htesWEe6Ip7PhoiYteg">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_Z22hsOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z22hsesWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22hsesWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z22hsOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22hsusWEe6Ip7PhoiYteg"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_Z22hsusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z22hsesWEe6Ip7PhoiYteg"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22ht-sWEe6Ip7PhoiYteg" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_Z22htusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22huOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22huOsWEe6Ip7PhoiYteg" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_Z22ht-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22huesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22huesWEe6Ip7PhoiYteg" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_Z22huOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22huusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22huusWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z22huesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22hu-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22hu-sWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z22huusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22hvOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22hvOsWEe6Ip7PhoiYteg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_Z22hu-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z22hvesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z22hvesWEe6Ip7PhoiYteg" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_Z22hvOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z23IwOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z23IwOsWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z22hvesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z23IwesWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z23IwesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z23IwOsWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z23IxusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z23IxesWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z23Iy-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z23IyusWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3nWtesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3nWs-sWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4-sWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3nWtOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4usWEe6Ip7PhoiYteg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z2yQVesWEe6Ip7PhoiYteg" describedService__SEFF="_ZwhQNOsWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xpOusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2yQQOsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2yQQOsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2xpOusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2yQU-sWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2xpPusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2xpQOsWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xpO-sWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2xpPOsWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xpPOsWEe6Ip7PhoiYteg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_Z2xpO-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xpPesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xpPesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xpPOsWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2xpROsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2xpRusWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xpQesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2xpQusWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xpQusWEe6Ip7PhoiYteg" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_Z2xpQesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xpQ-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xpQ-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xpQusWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2yQU-sWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2yQQOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2yQVOsWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2yQUOsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2yQUusWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2yQQesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2yQTusWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2yQTusWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2yQQesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2yQT-sWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2yQRusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Z2yQSOsWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2yQQusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2yQQ-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2yQQ-sWEe6Ip7PhoiYteg" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_Z2yQQusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2yQROsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2yQROsWEe6Ip7PhoiYteg" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_Z2yQQ-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2yQResWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2yQResWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2yQROsWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2yQS-sWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Z2yQTesWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2yQSesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2yQSusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2yQSusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2yQSesWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2yQT-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2yQTusWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z2yQVOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2yQU-sWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z2y3VOsWEe6Ip7PhoiYteg" describedService__SEFF="_ZwgpJusWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Z2y3UesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2y3UusWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2y3UusWEe6Ip7PhoiYteg" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_Z2y3UesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2y3U-sWEe6Ip7PhoiYteg">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z2y3U-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2y3UusWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_Z3roKesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3roKOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa5OsWEe6Ip7PhoiYteg"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_Z2xpOOsWEe6Ip7PhoiYteg" describedService__SEFF="_ZwgCEesWEe6Ip7PhoiYteg">
      <steps_Behaviour xsi:type="seff:StartAction" id="_Z2v0AesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2v0COsWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2v0COsWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2v0AesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0CesWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2v0BesWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_Z2v0B-sWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2v0AusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2v0A-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2v0A-sWEe6Ip7PhoiYteg" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_Z2v0AusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0BOsWEe6Ip7PhoiYteg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2v0BOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2v0A-sWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2v0CesWEe6Ip7PhoiYteg" entityName="stopWatch.start()" predecessor_AbstractAction="_Z2v0COsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xpNusWEe6Ip7PhoiYteg"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2xpNusWEe6Ip7PhoiYteg" entityName="Switch Branch" predecessor_AbstractAction="_Z2v0CesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xpN-sWEe6Ip7PhoiYteg">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2wbH-sWEe6Ip7PhoiYteg">
          <branchBehaviour_BranchTransition id="_Z2wbIesWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2v0CusWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2v0C-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2v0C-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2v0CusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0DOsWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2v0DOsWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z2v0C-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0DesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2v0DesWEe6Ip7PhoiYteg" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_Z2v0DOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0DusWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2v0DusWEe6Ip7PhoiYteg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Z2v0DesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2v0D-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2v0D-sWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z2v0DusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbG-sWEe6Ip7PhoiYteg">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2wbG-sWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2v0D-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbHOsWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2wbGOsWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Z2wbGusWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2v0EOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2wbEOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbEOsWEe6Ip7PhoiYteg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_Z2v0EOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbEesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbEesWEe6Ip7PhoiYteg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_Z2wbEOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbEusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbEusWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2wbEesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbE-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbE-sWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z2wbEusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbFOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbFOsWEe6Ip7PhoiYteg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_Z2wbE-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbFesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbFesWEe6Ip7PhoiYteg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Z2wbFOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbFusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2wbFusWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z2wbFesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbF-sWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2wbF-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2wbFusWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbHOsWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2wbG-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbHesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2wbHesWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2wbHOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2wbHusWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2wbHusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2wbHesWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2xCMesWEe6Ip7PhoiYteg">
          <branchBehaviour_BranchTransition id="_Z2xCM-sWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xCIOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2xCLesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_Z2xCLesWEe6Ip7PhoiYteg" entityName="If Branch" predecessor_AbstractAction="_Z2xCIOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCLusWEe6Ip7PhoiYteg">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2xCKusWEe6Ip7PhoiYteg" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_Z2xCLOsWEe6Ip7PhoiYteg">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xCIesWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2xCIusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCIusWEe6Ip7PhoiYteg" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_Z2xCIesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCI-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCI-sWEe6Ip7PhoiYteg" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_Z2xCIusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCJOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCJOsWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2xCI-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCJesWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCJesWEe6Ip7PhoiYteg" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_Z2xCJOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCJusWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCJusWEe6Ip7PhoiYteg" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_Z2xCJesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCJ-sWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCJ-sWEe6Ip7PhoiYteg" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_Z2xCJusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCKOsWEe6Ip7PhoiYteg"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_Z2xCKOsWEe6Ip7PhoiYteg" entityName="deferredResult" predecessor_AbstractAction="_Z2xCJ-sWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCKesWEe6Ip7PhoiYteg">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xCKesWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xCKOsWEe6Ip7PhoiYteg"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCLusWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2xCLesWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCL-sWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xCL-sWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2xCLusWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xCMOsWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xCMOsWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xCL-sWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_Z2xpM-sWEe6Ip7PhoiYteg">
          <branchBehaviour_BranchTransition id="_Z2xpNesWEe6Ip7PhoiYteg">
            <steps_Behaviour xsi:type="seff:StartAction" id="_Z2xpMOsWEe6Ip7PhoiYteg" entityName="Start Action" successor_AbstractAction="_Z2xpMesWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_Z2xpMesWEe6Ip7PhoiYteg" entityName="stopWatch.stop()" predecessor_AbstractAction="_Z2xpMOsWEe6Ip7PhoiYteg" successor_AbstractAction="_Z2xpMusWEe6Ip7PhoiYteg"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xpMusWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xpMesWEe6Ip7PhoiYteg"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_Z2xpN-sWEe6Ip7PhoiYteg" entityName="Stop Action" predecessor_AbstractAction="_Z2xpNusWEe6Ip7PhoiYteg"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vSgesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_Z3v5mOsWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3fa6OsWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHsusWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3fa5-sWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vSgOsWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3v5mOsWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vSgOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_Z3fa5esWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vSg-sWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_Z3v5kOsWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3ieOusWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHtesWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3ieOesWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vSgusWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3v5kOsWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vSgusWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4OsWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vShusWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_Z3wgoOsWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3nWtesWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHsesWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3nWs-sWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vShesWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3wgoOsWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHs-sWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3nWtOsWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vShOsWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3wgoOsWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vShOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4usWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vShesWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4-sWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vSh-sWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_Z3v5lOsWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3fa5usWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vSiesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_Z3v5kusWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3roKesWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHsOsWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3roKOsWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vSiOsWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3v5kusWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vSiOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa5OsWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_Z3vSi-sWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_Z3v5lusWEe6Ip7PhoiYteg" encapsulatedComponent__AssemblyContext="_Z3k6e-sWEe6Ip7PhoiYteg"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_Z3xHtOsWEe6Ip7PhoiYteg" innerProvidedRole_ProvidedDelegationConnector="_Z3k6eusWEe6Ip7PhoiYteg" outerProvidedRole_ProvidedDelegationConnector="_Z3vSiusWEe6Ip7PhoiYteg" assemblyContext_ProvidedDelegationConnector="_Z3v5lusWEe6Ip7PhoiYteg"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_Z3vSiusWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_Z3fa4esWEe6Ip7PhoiYteg"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa4OsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_ZvtX4OsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_Zvsw0OsWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZvrisOsWEe6Ip7PhoiYteg" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa4esWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_Zwh3QOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_Zvsw0OsWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZvrisOsWEe6Ip7PhoiYteg" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa4usWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_ZwgpJusWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_ZwgpIesWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZwgpJesWEe6Ip7PhoiYteg" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa4-sWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_ZwhQNOsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_ZwgpIesWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZwhQMusWEe6Ip7PhoiYteg" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_ZwhQM-sWEe6Ip7PhoiYteg" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa5OsWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_ZwgCEesWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_Zvsw0OsWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZwgCEOsWEe6Ip7PhoiYteg" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_Z3fa5esWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_ZwgpIusWEe6Ip7PhoiYteg" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_ZwgpIesWEe6Ip7PhoiYteg">
      <parameters__OperationSignature dataType__Parameter="_ZvrisOsWEe6Ip7PhoiYteg" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZvrisOsWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_Zvsw0OsWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZwgCEOsWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZwgpIesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZwgpJesWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZwhQMusWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_ZwhQM-sWEe6Ip7PhoiYteg" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
