<?xml version="1.0" encoding="UTF-8"?>
<repository:Repository xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:composition="http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" xmlns:repository="http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" xmlns:seff="http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" xmlns:stoex="http://sdq.ipd.uka.de/StochasticExpressions/2.2" id="_14EmxiOrEe-ayN0JDoPDFA">
  <components__Repository xsi:type="repository:BasicComponent" id="_130IFiOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_130IFSOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_130IESOrEe-ayN0JDoPDFA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13GWZiOrEe-ayN0JDoPDFA" describedService__SEFF="_1xKthCOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_1xmLUSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13GWYyOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13GWYyOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_1xmLUSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13GWZCOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13GWYCOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13GWYiOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_1xoAgCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13FvYSOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13FvYSOrEe-ayN0JDoPDFA" entityName="Switch Branch" predecessor_AbstractAction="_1xoAgCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13FvYiOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13FvUyOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13FvVSOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_1xonkCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13CE9SOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_13CE9SOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_1xonkCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13CsACOrEe-ayN0JDoPDFA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13CE8iOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_13CE9COrEe-ayN0JDoPDFA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_1xonkSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13CE8COrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_13CE8COrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_1xonkSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13CE8SOrEe-ayN0JDoPDFA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_1xpOoCOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_1xp1sCOrEe-ayN0JDoPDFA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_1xonkiOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_1xonkyOrEe-ayN0JDoPDFA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_1xonkyOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_1xonkiOrEe-ayN0JDoPDFA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_13CE8SOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13CE8COrEe-ayN0JDoPDFA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13CsACOrEe-ayN0JDoPDFA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_13CE9SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13CsASOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13CsASOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_13CsACOrEe-ayN0JDoPDFA" successor_AbstractAction="_13FvUCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13FvUCOrEe-ayN0JDoPDFA" entityName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))" predecessor_AbstractAction="_13CsASOrEe-ayN0JDoPDFA" successor_AbstractAction="_13FvUSOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.ok(new InternalTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId(),testResult.getResponsePadding(),appSession.get().getHashedGuid()))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13FvUSOrEe-ayN0JDoPDFA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_13FvUCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13FvUiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13FvUiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13FvUSOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13FvWSOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13FvWyOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13FvViOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13FvVyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13FvVyOrEe-ayN0JDoPDFA" entityName="log.info(&quot;Internal TestState is not allowed for TeleTan Token.&quot;)" predecessor_AbstractAction="_13FvViOrEe-ayN0JDoPDFA" successor_AbstractAction="_13FvWCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13FvWCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13FvVyOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13FvXiOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13FvYCOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13FvXCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13FvXSOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13FvXSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13FvXCOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13FvYiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13FvYSOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_13GWZCOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_13GWYyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13GWZSOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13GWZSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13GWZCOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_133LYyOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_133LYiOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_130IECOrEe-ayN0JDoPDFA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13ILlSOrEe-ayN0JDoPDFA" describedService__SEFF="_1wafkCOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_13GWaCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13GWbyOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13GWbyOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13GWaCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13GWcCOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13GWbCOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13GWbiOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13GWaSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13GWaiOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13GWaiOrEe-ayN0JDoPDFA" entityName="fakeRequestService.generateTan(registrationToken)" predecessor_AbstractAction="_13GWaSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13GWayOrEe-ayN0JDoPDFA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.generateTan(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.generateTan(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13GWayOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13GWaiOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_13GWcCOrEe-ayN0JDoPDFA" entityName="stopWatch.start()" predecessor_AbstractAction="_13GWbyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13ILkyOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13ILkyOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13GWcCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13ILlCOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13ILkCOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13ILkiOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13GWcSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13HkjSOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13HkjSOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13GWcSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkjiOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13HkiiOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_13HkjCOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13G9cCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13HkgCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_13HkgCOrEe-ayN0JDoPDFA" entityName="Switch Branch" predecessor_AbstractAction="_13G9cCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkgSOrEe-ayN0JDoPDFA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13G9eyOrEe-ayN0JDoPDFA">
                      <branchBehaviour_BranchTransition id="_13G9fSOrEe-ayN0JDoPDFA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_13G9cSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13G9eCOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_13G9eCOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13G9cSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13G9eSOrEe-ayN0JDoPDFA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13G9dSOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_13G9dyOrEe-ayN0JDoPDFA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_13G9ciOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13G9cyOrEe-ayN0JDoPDFA"/>
                              <steps_Behaviour xsi:type="seff:InternalAction" id="_13G9cyOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13G9ciOrEe-ayN0JDoPDFA" successor_AbstractAction="_13G9dCOrEe-ayN0JDoPDFA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_13G9dCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13G9cyOrEe-ayN0JDoPDFA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(covidTestResult.getTestResult() != LabTestResult.POSITIVE.getTestResult() &amp;&amp; covidTestResult.getTestResult() != LabTestResult.QUICK_POSITIVE.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_13G9eSOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13G9eCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13G9eiOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_13G9eiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13G9eSOrEe-ayN0JDoPDFA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13G9gSOrEe-ayN0JDoPDFA">
                      <branchBehaviour_BranchTransition id="_13G9gyOrEe-ayN0JDoPDFA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_13G9fiOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13G9fyOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_13G9fyOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13G9fiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13G9gCOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_13G9gCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13G9fyOrEe-ayN0JDoPDFA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
                    </branches_Branch>
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13G9hyOrEe-ayN0JDoPDFA">
                      <branchBehaviour_BranchTransition id="_13G9iSOrEe-ayN0JDoPDFA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_13G9hCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13G9hSOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:InternalAction" id="_13G9hSOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13G9hCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13G9hiOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_13G9hiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13G9hSOrEe-ayN0JDoPDFA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkgSOrEe-ayN0JDoPDFA" entityName="appSession.incrementTanCounter()" predecessor_AbstractAction="_13HkgCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkgiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkgiOrEe-ayN0JDoPDFA" entityName="appSession.setUpdatedAt(LocalDateTime.now())" predecessor_AbstractAction="_13HkgSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkgyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkgyOrEe-ayN0JDoPDFA" entityName="appSessionService.saveAppSession(appSession)" predecessor_AbstractAction="_13HkgiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkhCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkhCOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13HkgyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkhSOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkhSOrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTanRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13HkhCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkhiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkhiOrEe-ayN0JDoPDFA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.status(HttpStatus.CREATED).body(returnTan)),fakeDelayService.realDelayTan(),MILLISECONDS)" predecessor_AbstractAction="_13HkhSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkhyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13HkhyOrEe-ayN0JDoPDFA" entityName="log.info(&quot;Returning the successfully generated tan.&quot;)" predecessor_AbstractAction="_13HkhiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkiCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13HkiCOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13HkhyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13HkiSOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13HkiSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13HkiCOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.getTanCounter() &lt; tancountermax)"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13HkjiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13HkjSOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(actual.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13ILlCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13ILkyOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_135AniOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_135AnSOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_130IEiOrEe-ayN0JDoPDFA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13KAyyOrEe-ayN0JDoPDFA" describedService__SEFF="_1xL7oCOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_13ILlyOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13ILniOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13ILniOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13ILlyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13ILnyOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13ILmyOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13ILnSOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13ILmCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13ILmSOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13ILmSOrEe-ayN0JDoPDFA" entityName="fakeRequestService.getTestState(registrationToken)" predecessor_AbstractAction="_13ILmCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13ILmiOrEe-ayN0JDoPDFA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestService.getTestState(registrationToken)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestService.getTestState(registrationToken)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13ILmiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13ILmSOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_13ILnyOrEe-ayN0JDoPDFA" entityName="stopWatch.start()" predecessor_AbstractAction="_13ILniOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KAyCOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13KAyCOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13ILnyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KAySOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13KAxSOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13KAxyOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13ILoCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13KAwyOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13KAwyOrEe-ayN0JDoPDFA" entityName="Switch Branch" predecessor_AbstractAction="_13ILoCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KAxCOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13JZsCOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13JZsiOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13ILoSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13ILoiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13ILoiOrEe-ayN0JDoPDFA" entityName="testResult.setResponsePadding(RandomStringUtils.randomAlphanumeric(RESPONSE_PADDING_LENGTH))" predecessor_AbstractAction="_13ILoSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IypiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:BranchAction" id="_13IypiOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13ILoiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IypyOrEe-ayN0JDoPDFA">
                    <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13IyoyOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                      <branchBehaviour_BranchTransition id="_13IypSOrEe-ayN0JDoPDFA">
                        <steps_Behaviour xsi:type="seff:StartAction" id="_13ILoyOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13IyoSOrEe-ayN0JDoPDFA"/>
                        <steps_Behaviour xsi:type="seff:BranchAction" id="_13IyoSOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13ILoyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyoiOrEe-ayN0JDoPDFA">
                          <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13ILpiOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                            <branchBehaviour_BranchTransition id="_13IyoCOrEe-ayN0JDoPDFA">
                              <steps_Behaviour xsi:type="seff:StartAction" id="_13ILpCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13ILpSOrEe-ayN0JDoPDFA"/>
                              <steps_Behaviour xsi:type="seff:StopAction" id="_13ILpSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13ILpCOrEe-ayN0JDoPDFA"/>
                            </branchBehaviour_BranchTransition>
                            <branchCondition_GuardedBranchTransition specification="@position: Condition: if(testResultDob.getTestResult() != testResult.getTestResult())"/>
                          </branches_Branch>
                        </steps_Behaviour>
                        <steps_Behaviour xsi:type="seff:StopAction" id="_13IyoiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13IyoSOrEe-ayN0JDoPDFA"/>
                      </branchBehaviour_BranchTransition>
                      <branchCondition_GuardedBranchTransition specification="@position: Condition: if(!config.isDisableDobHashCheckForExternalTestResult() &amp;&amp; appSession.get().getHashedGuidDob() != null)"/>
                    </branches_Branch>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IypyOrEe-ayN0JDoPDFA" entityName="log.debug(&quot;Result {}&quot;,testResult)" predecessor_AbstractAction="_13IypiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyqCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyqCOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The result for registration token based on hashed Guid will be returned.&quot;)" predecessor_AbstractAction="_13IypyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyqSOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyqSOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13IyqCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyqiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyqiOrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13IyqSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyqyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyqyOrEe-ayN0JDoPDFA" entityName="deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(testResult.getTestResult(),testResult.getSc(),testResult.getLabId())))" predecessor_AbstractAction="_13IyqiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyrCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13IyrCOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13IyqyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyrSOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyrSOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_13IyrCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyriOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyriOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13IyrSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IyryOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IyryOrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13IyriOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IysCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IysCOrEe-ayN0JDoPDFA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_13IyryOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IysSOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13IysSOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13IysCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IysiOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13IysiOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13IysSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13IysyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13IysyOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13IysiOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(HASHED_GUID)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13JZuyOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13JZvSOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13JZsyOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13JZtCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZtCOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The result for registration token based on teleTAN will be returned.&quot;)" predecessor_AbstractAction="_13JZsyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZtSOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZtSOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13JZtCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZtiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZtiOrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTestRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13JZtSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZtyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZtyOrEe-ayN0JDoPDFA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(ResponseEntity.ok(generateReturnTestResult(LabTestResult.POSITIVE.getTestResult(),appSession.get().getCreatedAt().toEpochSecond(ZoneOffset.UTC),null))),fakeDelayService.realDelayTest(),MILLISECONDS)" predecessor_AbstractAction="_13JZtiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZuCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13JZuCOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13JZtyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZuSOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZuSOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13JZuCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZuiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13JZuiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13JZuSOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13KAwCOrEe-ayN0JDoPDFA">
                <branchBehaviour_BranchTransition id="_13KAwiOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13JZviOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13JZvyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13JZvyOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13JZviOrEe-ayN0JDoPDFA" successor_AbstractAction="_13JZwCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13JZwCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13JZvyOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13KAxCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13KAwyOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(appSession.isPresent())"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_13KAySOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The registration token doesn't exist.&quot;)" predecessor_AbstractAction="_13KAyCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KAyiOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13KAyiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13KAySOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_137c1COrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_service_FakeRequestService"/>
  <components__Repository xsi:type="repository:BasicComponent" id="_137c1yOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_137c1SOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_130IEyOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_137c1iOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_130IFCOrEe-ayN0JDoPDFA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13NEJSOrEe-ayN0JDoPDFA" describedService__SEFF="_1xL7pSOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_13MdBCOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13NEECOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13NEECOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13MdBCOrEe-ayN0JDoPDFA" successor_AbstractAction="_13NEIyOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13MdCCOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13MdCiOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13MdBSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13MdBiOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13MdBiOrEe-ayN0JDoPDFA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE)" predecessor_AbstractAction="_13MdBSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13MdByOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13MdByOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13MdBiOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == null)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13MdDiOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13MdECOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13MdCyOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13MdDCOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13MdDCOrEe-ayN0JDoPDFA" entityName="requiredRoles.add(AuthorizationRole.AUTH_C19_HOTLINE_EVENT)" predecessor_AbstractAction="_13MdCyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13MdDSOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13MdDSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13MdDCOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(teleTanType == TeleTanType.EVENT)"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13NEIyOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13NEECOrEe-ayN0JDoPDFA" successor_AbstractAction="_13NEJCOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13NEICOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13NEIiOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13NEESOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13NEHiOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13NEHiOrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13NEESOrEe-ayN0JDoPDFA" successor_AbstractAction="_13NEHyOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13NEFiOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_13NEGCOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13NEEiOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13NEEyOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13NEEyOrEe-ayN0JDoPDFA" entityName="log.info(&quot;The teleTAN is generated.&quot;)" predecessor_AbstractAction="_13NEEiOrEe-ayN0JDoPDFA" successor_AbstractAction="_13NEFCOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13NEFCOrEe-ayN0JDoPDFA" entityName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))" predecessor_AbstractAction="_13NEEyOrEe-ayN0JDoPDFA" successor_AbstractAction="_13NEFSOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="ResponseEntity.status(HttpStatus.CREATED).body(new TeleTan(teleTan))"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13NEFSOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13NEFCOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(tanService.isTeleTanRateLimitNotExceeded())"/>
              </branches_Branch>
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13NEGyOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_13NEHSOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13NEGSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13NEGiOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13NEGiOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13NEGSOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: else"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13NEHyOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13NEHiOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(jwtService.isAuthorized(authorization.getToken(),requiredRoles))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13NEJCOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13NEIyOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13MdAiOrEe-ayN0JDoPDFA" describedService__SEFF="_1xKtgSOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_13L2ASOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13MdACOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13MdACOrEe-ayN0JDoPDFA" entityName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)" predecessor_AbstractAction="_13L2ASOrEe-ayN0JDoPDFA" successor_AbstractAction="_13MdASOrEe-ayN0JDoPDFA">
        <localVariableUsages_SetVariableAction>
          <variableCharacterisation_VariableUsage type="VALUE">
            <specification_VariableCharacterisation specification="PrimitiveType.tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </variableCharacterisation_VariableUsage>
          <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
            <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="tanService.getEntityByTan(tan.getTan()).filter(t -> t.canBeRedeemed(LocalDateTime.now())).map(t -> {&#xA;  tanService.deleteTan(t);&#xA;  log.info(&quot;The Tan is valid.&quot;);&#xA;  return t;&#xA;}&#xA;).map(t -> {&#xA;  ResponseEntity.BodyBuilder responseBuilder=ResponseEntity.ok();&#xA;  if (t.getTeleTanType() != null) {&#xA;    responseBuilder.header(TELE_TAN_TYPE_HEADER,t.getTeleTanType().toString());&#xA;  }&#xA;  return responseBuilder.build();&#xA;}&#xA;).orElseGet(() -> {&#xA;  log.info(&quot;The Tan is invalid.&quot;);&#xA;  throw new VerificationServerException(HttpStatus.NOT_FOUND,&quot;No Tan found or Tan is invalid&quot;);&#xA;}&#xA;)"/>
          </namedReference__VariableUsage>
        </localVariableUsages_SetVariableAction>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13MdASOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13MdACOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:BasicComponent" id="_13_uRCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_13_uQyOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_13zhCiOrEe-ayN0JDoPDFA"/>
    <serviceEffectSpecifications__BasicComponent xsi:type="seff:ResourceDemandingSEFF" id="_13L1_yOrEe-ayN0JDoPDFA" describedService__SEFF="_1xLUkSOrEe-ayN0JDoPDFA">
      <steps_Behaviour xsi:type="seff:StartAction" id="_13KAzSOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13KA1COrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13KA1COrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13KAzSOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KA1SOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13KA0SOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
          <branchBehaviour_BranchTransition id="_13KA0yOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13KAziOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13KAzyOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13KAzyOrEe-ayN0JDoPDFA" entityName="fakeRequestController.generateRegistrationToken(request)" predecessor_AbstractAction="_13KAziOrEe-ayN0JDoPDFA" successor_AbstractAction="_13KA0COrEe-ayN0JDoPDFA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.fakeRequestController.generateRegistrationToken(request)"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="fakeRequestController.generateRegistrationToken(request)"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13KA0COrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13KAzyOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if((fake != null) &amp;&amp; (fake.equals(&quot;1&quot;)))"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:InternalAction" id="_13KA1SOrEe-ayN0JDoPDFA" entityName="stopWatch.start()" predecessor_AbstractAction="_13KA1COrEe-ayN0JDoPDFA" successor_AbstractAction="_13L1_SOrEe-ayN0JDoPDFA"/>
      <steps_Behaviour xsi:type="seff:BranchAction" id="_13L1_SOrEe-ayN0JDoPDFA" entityName="Switch Branch" predecessor_AbstractAction="_13KA1SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13L1_iOrEe-ayN0JDoPDFA">
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13LO4iOrEe-ayN0JDoPDFA">
          <branchBehaviour_BranchTransition id="_13LO5COrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13KA1iOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13KA1yOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13KA1yOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13KA1iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn0COrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn0COrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13KA1yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn0SOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn0SOrEe-ayN0JDoPDFA" entityName="deferredResult.setResult(responseEntity)" predecessor_AbstractAction="_13Kn0COrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn0iOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn0iOrEe-ayN0JDoPDFA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_13Kn0SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn0yOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13Kn0yOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13Kn0iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn4COrEe-ayN0JDoPDFA">
              <localVariableUsages_SetVariableAction>
                <variableCharacterisation_VariableUsage type="VALUE">
                  <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                </variableCharacterisation_VariableUsage>
                <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                  <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                </namedReference__VariableUsage>
              </localVariableUsages_SetVariableAction>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13Kn4COrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13Kn0yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn4SOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13Kn3SOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_13Kn3yOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13Kn1COrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13Kn1SOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn1SOrEe-ayN0JDoPDFA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_13Kn1COrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn1iOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn1iOrEe-ayN0JDoPDFA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_13Kn1SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn1yOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn1yOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13Kn1iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn2COrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn2COrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13Kn1yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn2SOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn2SOrEe-ayN0JDoPDFA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_13Kn2COrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn2iOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn2iOrEe-ayN0JDoPDFA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_13Kn2SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn2yOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13Kn2yOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13Kn2iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13Kn3COrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13Kn3COrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13Kn2yOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13Kn4SOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13Kn4COrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO4COrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO4COrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13Kn4SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO4SOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13LO4SOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13LO4COrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(GUID)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13L19COrEe-ayN0JDoPDFA">
          <branchBehaviour_BranchTransition id="_13L19iOrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13LO5SOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13L18COrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:BranchAction" id="_13L18COrEe-ayN0JDoPDFA" entityName="If Branch" predecessor_AbstractAction="_13LO5SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13L18SOrEe-ayN0JDoPDFA">
              <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13LO7yOrEe-ayN0JDoPDFA" entityName="Guarded Branch Transition">
                <branchBehaviour_BranchTransition id="_13LO8SOrEe-ayN0JDoPDFA">
                  <steps_Behaviour xsi:type="seff:StartAction" id="_13LO5iOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13LO5yOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO5yOrEe-ayN0JDoPDFA" entityName="teleTan.setRedeemed(true)" predecessor_AbstractAction="_13LO5iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO6COrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO6COrEe-ayN0JDoPDFA" entityName="tanService.saveTan(teleTan)" predecessor_AbstractAction="_13LO5yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO6SOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO6SOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13LO6COrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO6iOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO6iOrEe-ayN0JDoPDFA" entityName="fakeDelayService.updateFakeTokenRequestDelay(stopWatch.getTotalTimeMillis())" predecessor_AbstractAction="_13LO6SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO6yOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO6yOrEe-ayN0JDoPDFA" entityName="scheduledExecutor.schedule(() -> deferredResult.setResult(response),fakeDelayService.realDelayToken(),MILLISECONDS)" predecessor_AbstractAction="_13LO6iOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO7COrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:InternalAction" id="_13LO7COrEe-ayN0JDoPDFA" entityName="log.info(&quot;Returning the successfully generated RegistrationToken.&quot;)" predecessor_AbstractAction="_13LO6yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO7SOrEe-ayN0JDoPDFA"/>
                  <steps_Behaviour xsi:type="seff:SetVariableAction" id="_13LO7SOrEe-ayN0JDoPDFA" entityName="deferredResult" predecessor_AbstractAction="_13LO7COrEe-ayN0JDoPDFA" successor_AbstractAction="_13LO7iOrEe-ayN0JDoPDFA">
                    <localVariableUsages_SetVariableAction>
                      <variableCharacterisation_VariableUsage type="VALUE">
                        <specification_VariableCharacterisation specification="PrimitiveType.deferredResult"/>
                      </variableCharacterisation_VariableUsage>
                      <namedReference__VariableUsage xsi:type="stoex:NamespaceReference" referenceName="PrimitiveType">
                        <innerReference_NamespaceReference xsi:type="stoex:VariableReference" referenceName="deferredResult"/>
                      </namedReference__VariableUsage>
                    </localVariableUsages_SetVariableAction>
                  </steps_Behaviour>
                  <steps_Behaviour xsi:type="seff:StopAction" id="_13LO7iOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13LO7SOrEe-ayN0JDoPDFA"/>
                </branchBehaviour_BranchTransition>
                <branchCondition_GuardedBranchTransition specification="@position: Condition: if(optional.isPresent())"/>
              </branches_Branch>
            </steps_Behaviour>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13L18SOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13L18COrEe-ayN0JDoPDFA" successor_AbstractAction="_13L18iOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13L18iOrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13L18SOrEe-ayN0JDoPDFA" successor_AbstractAction="_13L18yOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13L18yOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13L18iOrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if(TELETAN)"/>
        </branches_Branch>
        <branches_Branch xsi:type="seff:GuardedBranchTransition" id="_13L1-iOrEe-ayN0JDoPDFA">
          <branchBehaviour_BranchTransition id="_13L1_COrEe-ayN0JDoPDFA">
            <steps_Behaviour xsi:type="seff:StartAction" id="_13L19yOrEe-ayN0JDoPDFA" entityName="Start Action" successor_AbstractAction="_13L1-COrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:InternalAction" id="_13L1-COrEe-ayN0JDoPDFA" entityName="stopWatch.stop()" predecessor_AbstractAction="_13L19yOrEe-ayN0JDoPDFA" successor_AbstractAction="_13L1-SOrEe-ayN0JDoPDFA"/>
            <steps_Behaviour xsi:type="seff:StopAction" id="_13L1-SOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13L1-COrEe-ayN0JDoPDFA"/>
          </branchBehaviour_BranchTransition>
          <branchCondition_GuardedBranchTransition specification="@position: Condition: if()"/>
        </branches_Branch>
      </steps_Behaviour>
      <steps_Behaviour xsi:type="seff:StopAction" id="_13L1_iOrEe-ayN0JDoPDFA" entityName="Stop Action" predecessor_AbstractAction="_13L1_SOrEe-ayN0JDoPDFA"/>
    </serviceEffectSpecifications__BasicComponent>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14DYoSOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTanController">
    <assemblyContexts__ComposedStructure id="_14D_tCOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_133LYyOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN0iOrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_133LYiOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14DYoCOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14D_tCOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14DYoCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan[POST] Provider" providedInterface__OperationProvidedRole="_130IECOrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14DYoyOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTokenController">
    <assemblyContexts__ComposedStructure id="_14EmxCOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_13_uRCOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN0COrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_13_uQyOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14DYoiOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14EmxCOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14DYoiOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST] Provider" providedInterface__OperationProvidedRole="_13zhCiOrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14DYpSOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_InternalTestStateController">
    <assemblyContexts__ComposedStructure id="_14EmwCOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_130IFiOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN1COrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_130IFSOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14DYpCOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14EmwCOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14DYpCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST] Provider" providedInterface__OperationProvidedRole="_130IESOrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14DYpiOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_service_FakeRequestService">
    <assemblyContexts__ComposedStructure id="_14D_siOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_137c1COrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14DYqSOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_InternalTanController">
    <assemblyContexts__ComposedStructure id="_14EmwiOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_137c1yOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN0yOrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_137c1iOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14DYpyOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14EmwiOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN1SOrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_137c1SOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14DYqCOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14EmwiOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14DYpyOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST] Provider" providedInterface__OperationProvidedRole="_130IFCOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14DYqCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST] Provider" providedInterface__OperationProvidedRole="_130IEyOrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <components__Repository xsi:type="repository:CompositeComponent" id="_14D_sSOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ExternalTestStateController">
    <assemblyContexts__ComposedStructure id="_14D_tiOrEe-ayN0JDoPDFA" encapsulatedComponent__AssemblyContext="_135AniOrEe-ayN0JDoPDFA"/>
    <connectors__ComposedStructure xsi:type="composition:ProvidedDelegationConnector" id="_14FN0SOrEe-ayN0JDoPDFA" innerProvidedRole_ProvidedDelegationConnector="_135AnSOrEe-ayN0JDoPDFA" outerProvidedRole_ProvidedDelegationConnector="_14D_sCOrEe-ayN0JDoPDFA" assemblyContext_ProvidedDelegationConnector="_14D_tiOrEe-ayN0JDoPDFA"/>
    <providedRoles_InterfaceProvidingEntity xsi:type="repository:OperationProvidedRole" id="_14D_sCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2 Provider" providedInterface__OperationProvidedRole="_130IEiOrEe-ayN0JDoPDFA"/>
  </components__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_13zhCiOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]">
    <signatures__OperationInterface id="_1xLUkSOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/registrationToken[POST]" returnType__OperationSignature="_1wZ4gCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1xLUkCOrEe-ayN0JDoPDFA" parameterName="RegistrationTokenRequest" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_130IECOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan[POST]">
    <signatures__OperationInterface id="_1wafkCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan[POST]" returnType__OperationSignature="_1wZ4gCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1wYqYCOrEe-ayN0JDoPDFA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_130IESOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]">
    <signatures__OperationInterface id="_1xKthCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]" returnType__OperationSignature="_1xKtgCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1wYqYCOrEe-ayN0JDoPDFA" parameterName="RegistrationToken" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_130IEiOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2">
    <signatures__OperationInterface id="_1xL7oCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/testresult[POST]$2" returnType__OperationSignature="_1wZ4gCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1wYqYCOrEe-ayN0JDoPDFA" parameterName="RegistrationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature parameterName="String" modifier__Parameter="in">
        <dataType__Parameter xsi:type="repository:PrimitiveDataType" href="pathmap://PCM_MODELS/PrimitiveTypes.repository#//@dataTypes__Repository.1"/>
      </parameters__OperationSignature>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_130IEyOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]">
    <signatures__OperationInterface id="_1xL7pSOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/teletan[POST]" returnType__OperationSignature="_1xKtgCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1xL7oyOrEe-ayN0JDoPDFA" parameterName="AuthorizationToken" modifier__Parameter="in"/>
      <parameters__OperationSignature dataType__Parameter="_1xL7pCOrEe-ayN0JDoPDFA" parameterName="TeleTanType" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <interfaces__Repository xsi:type="repository:OperationInterface" id="_130IFCOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]">
    <signatures__OperationInterface id="_1xKtgSOrEe-ayN0JDoPDFA" entityName="SPRING-APPLICATION/version/v1/tan/verify[POST]" returnType__OperationSignature="_1xKtgCOrEe-ayN0JDoPDFA">
      <parameters__OperationSignature dataType__Parameter="_1xKGcCOrEe-ayN0JDoPDFA" parameterName="Tan" modifier__Parameter="in"/>
    </signatures__OperationInterface>
  </interfaces__Repository>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1wYqYCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_model_RegistrationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1wZ4gCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_DeferredResult"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1xKGcCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_model_Tan"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1xKtgCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_controller_ResponseEntity"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1xLUkCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_model_RegistrationTokenRequest"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1xL7oyOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_model_AuthorizationToken"/>
  <dataTypes__Repository xsi:type="repository:CompositeDataType" id="_1xL7pCOrEe-ayN0JDoPDFA" entityName="app_coronawarn_verification_model_TeleTanType"/>
</repository:Repository>
